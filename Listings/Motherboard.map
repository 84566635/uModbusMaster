Component: ARM Compiler 5.06 update 5 (build 528) Tool: armlink [4d35e2]

==============================================================================

Section Cross References

    th_main.o(i.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    th_main.o(i.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    th_main.o(i.main) refers to th_modbusmaster.o(i.modbusMaster_ThreadStart) for modbusMaster_ThreadStart
    th_main.o(i.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    th_main.o(i.main) refers to th_main.o(i.th_Main) for th_Main
    th_main.o(i.th_Main) refers to th_modbusmaster.o(i.modbusMaster_ThreadStart) for modbusMaster_ThreadStart
    th_main.o(i.th_Main) refers to rtx_delay.o(.text.osDelay) for osDelay
    th_main.o(i.th_Main) refers to mbmfuncinput.o(i.uMBM_InputReg_Read) for uMBM_InputReg_Read
    th_main.o(i.th_Main) refers to mbm.o(i.uMBM_GetBuffer_16) for uMBM_GetBuffer_16
    th_main.o(i.th_Main) refers to th_modbusmaster.o(.bss) for mbm_SensorHub_0
    th_main.o(i.th_Main) refers to th_main.o(.bss) for rcvInputReg
    th_main.o(i.th_Main) refers to th_main.o(.data) for rcvLength
    th_modbusmaster.o(i.modbusMaster_Thread) refers to mbm.o(i.uMBM_CoreInit) for uMBM_CoreInit
    th_modbusmaster.o(i.modbusMaster_Thread) refers to mbm.o(i.uMBM_Enable) for uMBM_Enable
    th_modbusmaster.o(i.modbusMaster_Thread) refers to mbm.o(i.uMBM_Poll) for uMBM_Poll
    th_modbusmaster.o(i.modbusMaster_Thread) refers to pmtimer.o(.data) for mbm_Timer
    th_modbusmaster.o(i.modbusMaster_Thread) refers to pmserial.o(.data) for mbm_Serial
    th_modbusmaster.o(i.modbusMaster_Thread) refers to pmevent.o(.constdata) for mbm_Event
    th_modbusmaster.o(i.modbusMaster_Thread) refers to th_modbusmaster.o(.bss) for mbm_SensorHub_0
    th_modbusmaster.o(i.modbusMaster_ThreadStart) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    th_modbusmaster.o(i.modbusMaster_ThreadStart) refers to th_modbusmaster.o(i.modbusMaster_Thread) for modbusMaster_Thread
    th_modbusmaster.o(i.modbusMaster_ThreadStart) refers to th_modbusmaster.o(.data) for modbusMaster_ThreadID
    stm32f0xx_adc.o(i.ADC_DeInit) refers to stm32f0xx_rcc.o(i.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f0xx_can.o(i.CAN_DeInit) refers to stm32f0xx_rcc.o(i.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f0xx_can.o(i.CAN_GetITStatus) refers to stm32f0xx_can.o(i.CheckITStatus) for CheckITStatus
    stm32f0xx_cec.o(i.CEC_DeInit) refers to stm32f0xx_rcc.o(i.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f0xx_crs.o(i.CRS_DeInit) refers to stm32f0xx_rcc.o(i.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f0xx_dac.o(i.DAC_DeInit) refers to stm32f0xx_rcc.o(i.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f0xx_flash.o(i.FLASH_EraseAllPages) refers to stm32f0xx_flash.o(i.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f0xx_flash.o(i.FLASH_ErasePage) refers to stm32f0xx_flash.o(i.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f0xx_flash.o(i.FLASH_OB_BOOT0Config) refers to stm32f0xx_flash.o(i.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f0xx_flash.o(i.FLASH_OB_BOOT0SWConfig) refers to stm32f0xx_flash.o(i.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f0xx_flash.o(i.FLASH_OB_BOOTConfig) refers to stm32f0xx_flash.o(i.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f0xx_flash.o(i.FLASH_OB_EnableWRP) refers to stm32f0xx_flash.o(i.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f0xx_flash.o(i.FLASH_OB_Erase) refers to stm32f0xx_flash.o(i.FLASH_OB_GetRDP) for FLASH_OB_GetRDP
    stm32f0xx_flash.o(i.FLASH_OB_Erase) refers to stm32f0xx_flash.o(i.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f0xx_flash.o(i.FLASH_OB_ProgramData) refers to stm32f0xx_flash.o(i.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f0xx_flash.o(i.FLASH_OB_RDPConfig) refers to stm32f0xx_flash.o(i.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f0xx_flash.o(i.FLASH_OB_SRAMParityConfig) refers to stm32f0xx_flash.o(i.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f0xx_flash.o(i.FLASH_OB_UserConfig) refers to stm32f0xx_flash.o(i.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f0xx_flash.o(i.FLASH_OB_VDDAConfig) refers to stm32f0xx_flash.o(i.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f0xx_flash.o(i.FLASH_OB_WriteUser) refers to stm32f0xx_flash.o(i.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f0xx_flash.o(i.FLASH_ProgramHalfWord) refers to stm32f0xx_flash.o(i.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f0xx_flash.o(i.FLASH_ProgramWord) refers to stm32f0xx_flash.o(i.FLASH_WaitForLastOperation) for FLASH_WaitForLastOperation
    stm32f0xx_flash.o(i.FLASH_WaitForLastOperation) refers to stm32f0xx_flash.o(i.FLASH_GetStatus) for FLASH_GetStatus
    stm32f0xx_gpio.o(i.GPIO_DeInit) refers to stm32f0xx_rcc.o(i.RCC_AHBPeriphResetCmd) for RCC_AHBPeriphResetCmd
    stm32f0xx_i2c.o(i.I2C_DeInit) refers to stm32f0xx_rcc.o(i.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f0xx_pwr.o(i.PWR_DeInit) refers to stm32f0xx_rcc.o(i.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f0xx_rcc.o(i.RCC_GetClocksFreq) refers to uidiv.o(.text) for __aeabi_uidivmod
    stm32f0xx_rcc.o(i.RCC_GetClocksFreq) refers to stm32f0xx_rcc.o(.data) for APBAHBPrescTable
    stm32f0xx_rcc.o(i.RCC_WaitForHSEStartUp) refers to stm32f0xx_rcc.o(i.RCC_GetFlagStatus) for RCC_GetFlagStatus
    stm32f0xx_rtc.o(i.RTC_DeInit) refers to stm32f0xx_rtc.o(i.RTC_EnterInitMode) for RTC_EnterInitMode
    stm32f0xx_rtc.o(i.RTC_DeInit) refers to stm32f0xx_rtc.o(i.RTC_WaitForSynchro) for RTC_WaitForSynchro
    stm32f0xx_rtc.o(i.RTC_GetAlarm) refers to stm32f0xx_rtc.o(i.RTC_Bcd2ToByte) for RTC_Bcd2ToByte
    stm32f0xx_rtc.o(i.RTC_GetDate) refers to stm32f0xx_rtc.o(i.RTC_Bcd2ToByte) for RTC_Bcd2ToByte
    stm32f0xx_rtc.o(i.RTC_GetTime) refers to stm32f0xx_rtc.o(i.RTC_Bcd2ToByte) for RTC_Bcd2ToByte
    stm32f0xx_rtc.o(i.RTC_GetTimeStamp) refers to stm32f0xx_rtc.o(i.RTC_Bcd2ToByte) for RTC_Bcd2ToByte
    stm32f0xx_rtc.o(i.RTC_Init) refers to stm32f0xx_rtc.o(i.RTC_EnterInitMode) for RTC_EnterInitMode
    stm32f0xx_rtc.o(i.RTC_Init) refers to stm32f0xx_rtc.o(i.RTC_ExitInitMode) for RTC_ExitInitMode
    stm32f0xx_rtc.o(i.RTC_RefClockCmd) refers to stm32f0xx_rtc.o(i.RTC_EnterInitMode) for RTC_EnterInitMode
    stm32f0xx_rtc.o(i.RTC_RefClockCmd) refers to stm32f0xx_rtc.o(i.RTC_ExitInitMode) for RTC_ExitInitMode
    stm32f0xx_rtc.o(i.RTC_SetAlarm) refers to stm32f0xx_rtc.o(i.RTC_Bcd2ToByte) for RTC_Bcd2ToByte
    stm32f0xx_rtc.o(i.RTC_SetAlarm) refers to stm32f0xx_rtc.o(i.RTC_ByteToBcd2) for RTC_ByteToBcd2
    stm32f0xx_rtc.o(i.RTC_SetDate) refers to stm32f0xx_rtc.o(i.RTC_Bcd2ToByte) for RTC_Bcd2ToByte
    stm32f0xx_rtc.o(i.RTC_SetDate) refers to stm32f0xx_rtc.o(i.RTC_ByteToBcd2) for RTC_ByteToBcd2
    stm32f0xx_rtc.o(i.RTC_SetDate) refers to stm32f0xx_rtc.o(i.RTC_EnterInitMode) for RTC_EnterInitMode
    stm32f0xx_rtc.o(i.RTC_SetDate) refers to stm32f0xx_rtc.o(i.RTC_ExitInitMode) for RTC_ExitInitMode
    stm32f0xx_rtc.o(i.RTC_SetDate) refers to stm32f0xx_rtc.o(i.RTC_WaitForSynchro) for RTC_WaitForSynchro
    stm32f0xx_rtc.o(i.RTC_SetTime) refers to stm32f0xx_rtc.o(i.RTC_Bcd2ToByte) for RTC_Bcd2ToByte
    stm32f0xx_rtc.o(i.RTC_SetTime) refers to stm32f0xx_rtc.o(i.RTC_ByteToBcd2) for RTC_ByteToBcd2
    stm32f0xx_rtc.o(i.RTC_SetTime) refers to stm32f0xx_rtc.o(i.RTC_EnterInitMode) for RTC_EnterInitMode
    stm32f0xx_rtc.o(i.RTC_SetTime) refers to stm32f0xx_rtc.o(i.RTC_ExitInitMode) for RTC_ExitInitMode
    stm32f0xx_rtc.o(i.RTC_SetTime) refers to stm32f0xx_rtc.o(i.RTC_WaitForSynchro) for RTC_WaitForSynchro
    stm32f0xx_rtc.o(i.RTC_SynchroShiftConfig) refers to stm32f0xx_rtc.o(i.RTC_WaitForSynchro) for RTC_WaitForSynchro
    stm32f0xx_spi.o(i.I2S_Init) refers to stm32f0xx_rcc.o(i.RCC_GetClocksFreq) for RCC_GetClocksFreq
    stm32f0xx_spi.o(i.I2S_Init) refers to uidiv.o(.text) for __aeabi_uidivmod
    stm32f0xx_spi.o(i.SPI_I2S_DeInit) refers to stm32f0xx_rcc.o(i.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f0xx_spi.o(i.SPI_I2S_DeInit) refers to stm32f0xx_rcc.o(i.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f0xx_tim.o(i.TIM_DeInit) refers to stm32f0xx_rcc.o(i.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f0xx_tim.o(i.TIM_DeInit) refers to stm32f0xx_rcc.o(i.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f0xx_tim.o(i.TIM_ETRClockMode1Config) refers to stm32f0xx_tim.o(i.TIM_ETRConfig) for TIM_ETRConfig
    stm32f0xx_tim.o(i.TIM_ETRClockMode2Config) refers to stm32f0xx_tim.o(i.TIM_ETRConfig) for TIM_ETRConfig
    stm32f0xx_tim.o(i.TIM_ICInit) refers to stm32f0xx_tim.o(i.TI1_Config) for TI1_Config
    stm32f0xx_tim.o(i.TIM_ICInit) refers to stm32f0xx_tim.o(i.TIM_SetIC1Prescaler) for TIM_SetIC1Prescaler
    stm32f0xx_tim.o(i.TIM_ICInit) refers to stm32f0xx_tim.o(i.TI2_Config) for TI2_Config
    stm32f0xx_tim.o(i.TIM_ICInit) refers to stm32f0xx_tim.o(i.TIM_SetIC2Prescaler) for TIM_SetIC2Prescaler
    stm32f0xx_tim.o(i.TIM_ICInit) refers to stm32f0xx_tim.o(i.TI3_Config) for TI3_Config
    stm32f0xx_tim.o(i.TIM_ICInit) refers to stm32f0xx_tim.o(i.TIM_SetIC3Prescaler) for TIM_SetIC3Prescaler
    stm32f0xx_tim.o(i.TIM_ICInit) refers to stm32f0xx_tim.o(i.TI4_Config) for TI4_Config
    stm32f0xx_tim.o(i.TIM_ICInit) refers to stm32f0xx_tim.o(i.TIM_SetIC4Prescaler) for TIM_SetIC4Prescaler
    stm32f0xx_tim.o(i.TIM_ITRxExternalClockConfig) refers to stm32f0xx_tim.o(i.TIM_SelectInputTrigger) for TIM_SelectInputTrigger
    stm32f0xx_tim.o(i.TIM_PWMIConfig) refers to stm32f0xx_tim.o(i.TI1_Config) for TI1_Config
    stm32f0xx_tim.o(i.TIM_PWMIConfig) refers to stm32f0xx_tim.o(i.TIM_SetIC1Prescaler) for TIM_SetIC1Prescaler
    stm32f0xx_tim.o(i.TIM_PWMIConfig) refers to stm32f0xx_tim.o(i.TI2_Config) for TI2_Config
    stm32f0xx_tim.o(i.TIM_PWMIConfig) refers to stm32f0xx_tim.o(i.TIM_SetIC2Prescaler) for TIM_SetIC2Prescaler
    stm32f0xx_tim.o(i.TIM_TIxExternalClockConfig) refers to stm32f0xx_tim.o(i.TI2_Config) for TI2_Config
    stm32f0xx_tim.o(i.TIM_TIxExternalClockConfig) refers to stm32f0xx_tim.o(i.TI1_Config) for TI1_Config
    stm32f0xx_tim.o(i.TIM_TIxExternalClockConfig) refers to stm32f0xx_tim.o(i.TIM_SelectInputTrigger) for TIM_SelectInputTrigger
    stm32f0xx_usart.o(i.USART_DeInit) refers to stm32f0xx_rcc.o(i.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f0xx_usart.o(i.USART_DeInit) refers to stm32f0xx_rcc.o(i.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f0xx_usart.o(i.USART_Init) refers to stm32f0xx_rcc.o(i.RCC_GetClocksFreq) for RCC_GetClocksFreq
    stm32f0xx_usart.o(i.USART_Init) refers to uidiv.o(.text) for __aeabi_uidivmod
    stm32f0xx_wwdg.o(i.WWDG_DeInit) refers to stm32f0xx_rcc.o(i.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    pmevent.o(i.pMBM_EventGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    pmevent.o(i.pMBM_EventGet) refers to pmevent.o(.data) for mbm_CoreMsg_ID
    pmevent.o(i.pMBM_EventInit) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    pmevent.o(i.pMBM_EventInit) refers to pmevent.o(.data) for mbm_CoreMsg_ID
    pmevent.o(i.pMBM_EventPost) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    pmevent.o(i.pMBM_EventPost) refers to pmevent.o(.data) for mbm_CoreMsg_ID
    pmevent.o(i.pMBM_SemaphoreInit) refers to rtx_semaphore.o(.text.osSemaphoreNew) for osSemaphoreNew
    pmevent.o(i.pMBM_SemaphoreInit) refers to pmevent.o(.data) for mbm_Sem_ID
    pmevent.o(i.pMBM_SemaphoreRelease) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for osSemaphoreRelease
    pmevent.o(i.pMBM_SemaphoreRelease) refers to pmevent.o(.data) for mbm_Sem_ID
    pmevent.o(i.pMBM_SemaphoreWait) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    pmevent.o(i.pMBM_SemaphoreWait) refers to pmevent.o(.data) for mbm_Sem_ID
    pmevent.o(i.pMBM_UserEventGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    pmevent.o(i.pMBM_UserEventGet) refers to pmevent.o(.data) for mbm_UserMsg_ID
    pmevent.o(i.pMBM_UserEventPost) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    pmevent.o(i.pMBM_UserEventPost) refers to pmevent.o(.data) for mbm_UserMsg_ID
    pmevent.o(.constdata) refers to pmevent.o(i.pMBM_EventInit) for pMBM_EventInit
    pmevent.o(.constdata) refers to pmevent.o(i.pMBM_EventPost) for pMBM_EventPost
    pmevent.o(.constdata) refers to pmevent.o(i.pMBM_EventGet) for pMBM_EventGet
    pmevent.o(.constdata) refers to pmevent.o(i.pMBM_SemaphoreInit) for pMBM_SemaphoreInit
    pmevent.o(.constdata) refers to pmevent.o(i.pMBM_SemaphoreWait) for pMBM_SemaphoreWait
    pmevent.o(.constdata) refers to pmevent.o(i.pMBM_SemaphoreRelease) for pMBM_SemaphoreRelease
    pmevent.o(.constdata) refers to pmevent.o(i.pMBM_UserEventPost) for pMBM_UserEventPost
    pmevent.o(.constdata) refers to pmevent.o(i.pMBM_UserEventGet) for pMBM_UserEventGet
    pmserial.o(i.USART1_IRQHandler) refers to stm32f0xx_usart.o(i.USART_GetITStatus) for USART_GetITStatus
    pmserial.o(i.USART1_IRQHandler) refers to mbm.o(i.pMBM_SerialRXNE_ISR) for pMBM_SerialRXNE_ISR
    pmserial.o(i.USART1_IRQHandler) refers to mbm.o(i.pMBM_SerialTC_ISR) for pMBM_SerialTC_ISR
    pmserial.o(i.USART1_IRQHandler) refers to pmserial.o(.data) for mbm_Serial
    pmserial.o(i.pMBM_SerialEnable) refers to stm32f0xx_usart.o(i.USART_ITConfig) for USART_ITConfig
    pmserial.o(i.pMBM_SerialInit) refers to stm32f0xx_rcc.o(i.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    pmserial.o(i.pMBM_SerialInit) refers to stm32f0xx_rcc.o(i.RCC_AHBPeriphClockCmd) for RCC_AHBPeriphClockCmd
    pmserial.o(i.pMBM_SerialInit) refers to stm32f0xx_gpio.o(i.GPIO_Init) for GPIO_Init
    pmserial.o(i.pMBM_SerialInit) refers to stm32f0xx_gpio.o(i.GPIO_PinAFConfig) for GPIO_PinAFConfig
    pmserial.o(i.pMBM_SerialInit) refers to stm32f0xx_usart.o(i.USART_Init) for USART_Init
    pmserial.o(i.pMBM_SerialInit) refers to stm32f0xx_usart.o(i.USART_ITConfig) for USART_ITConfig
    pmserial.o(i.pMBM_SerialInit) refers to stm32f0xx_usart.o(i.USART_ClearFlag) for USART_ClearFlag
    pmserial.o(i.pMBM_SerialInit) refers to stm32f0xx_usart.o(i.USART_Cmd) for USART_Cmd
    pmserial.o(i.pMBM_SerialInit) refers to stm32f0xx_misc.o(i.NVIC_Init) for NVIC_Init
    pmserial.o(i.pMBM_SerialInit) refers to pmserial.o(.data) for mbm_Serial
    pmserial.o(.data) refers to pmserial.o(i.pMBM_SerialInit) for pMBM_SerialInit
    pmserial.o(.data) refers to pmserial.o(i.pMBM_SerialEnable) for pMBM_SerialEnable
    pmserial.o(.data) refers to pmserial.o(i.pMBM_SerialDisable) for pMBM_SerialDisable
    pmserial.o(.data) refers to pmserial.o(i.pMBM_SerialSendByte) for pMBM_SerialSendByte
    pmserial.o(.data) refers to pmserial.o(i.pMBM_SerialReadByte) for pMBM_SerialReadByte
    pmtimer.o(i.TIM15_IRQHandler) refers to mbm.o(i.pMBM_Timer_ISR) for pMBM_Timer_ISR
    pmtimer.o(i.TIM15_IRQHandler) refers to pmtimer.o(.data) for mbm_Timer
    pmtimer.o(i.pMBM_RespondTimerEnable) refers to pmtimer.o(.data) for mbm_Timer
    pmtimer.o(i.pMBM_T35TimerEnable) refers to pmtimer.o(.data) for mbm_Timer
    pmtimer.o(i.pMBM_TimerInit) refers to stm32f0xx_rcc.o(i.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    pmtimer.o(i.pMBM_TimerInit) refers to uidiv.o(.text) for __aeabi_uidivmod
    pmtimer.o(i.pMBM_TimerInit) refers to stm32f0xx_tim.o(i.TIM_TimeBaseInit) for TIM_TimeBaseInit
    pmtimer.o(i.pMBM_TimerInit) refers to stm32f0xx_misc.o(i.NVIC_Init) for NVIC_Init
    pmtimer.o(i.pMBM_TimerInit) refers to stm32f0xx_tim.o(i.TIM_ClearITPendingBit) for TIM_ClearITPendingBit
    pmtimer.o(i.pMBM_TimerInit) refers to stm32f0xx_tim.o(i.TIM_ITConfig) for TIM_ITConfig
    pmtimer.o(i.pMBM_TimerInit) refers to stm32f0xx_tim.o(i.TIM_Cmd) for TIM_Cmd
    pmtimer.o(i.pMBM_TimerInit) refers to pmtimer.o(.data) for mbm_Timer
    pmtimer.o(i.pMBM_TimerInit) refers to system_stm32f0xx.o(.data) for SystemCoreClock
    pmtimer.o(.data) refers to pmtimer.o(i.pMBM_TimerInit) for pMBM_TimerInit
    pmtimer.o(.data) refers to pmtimer.o(i.pMBM_TimerDisable) for pMBM_TimerDisable
    pmtimer.o(.data) refers to pmtimer.o(i.pMBM_T35TimerEnable) for pMBM_T35TimerEnable
    pmtimer.o(.data) refers to pmtimer.o(i.pMBM_RespondTimerEnable) for pMBM_RespondTimerEnable
    mbm.o(i.mbm_FunctionExecute) refers to mbm.o(.constdata) for mbm_FunctionsHandlers
    mbm.o(i.mbm_RTUFrameProcess) refers to mbmcrc16.o(i.mbm_CRC16Calc) for mbm_CRC16Calc
    mbm.o(i.mbm_RTUSendStartup) refers to mbmcrc16.o(i.mbm_CRC16Calc) for mbm_CRC16Calc
    mbm.o(i.pMBM_SerialRXNE_ISR) refers to mbm.o(i.mbm_RTURxProcess) for mbm_RTURxProcess
    mbm.o(i.pMBM_SerialTC_ISR) refers to mbm.o(i.mbm_RTUTxProcess) for mbm_RTUTxProcess
    mbm.o(i.pMBM_Timer_ISR) refers to mbm.o(i.mbm_RTUTimerExpired) for mbm_RTUTimerExpired
    mbm.o(i.uMBM_CoreInit) refers to idiv.o(.text) for __aeabi_idivmod
    mbm.o(i.uMBM_CoreInit) refers to mbm.o(i.uMBM_Disable) for uMBM_Disable
    mbm.o(i.uMBM_GetBuffer_16) refers to memcpya.o(.text) for __aeabi_memcpy
    mbm.o(i.uMBM_GetBuffer_8) refers to memcpya.o(.text) for __aeabi_memcpy
    mbm.o(i.uMBM_Poll) refers to mbm.o(i.__ARM_common_switch8) for __ARM_common_switch8
    mbm.o(i.uMBM_Poll) refers to mbm.o(i.mbm_RTUSendStartup) for mbm_RTUSendStartup
    mbm.o(i.uMBM_Poll) refers to mbm.o(i.mbm_RTUFrameProcess) for mbm_RTUFrameProcess
    mbm.o(i.uMBM_Poll) refers to mbm.o(i.mbm_FunctionExecute) for mbm_FunctionExecute
    mbm.o(.constdata) refers to mbmfuncinput.o(i.mbm_InputReg_Read_Func) for mbm_InputReg_Read_Func
    mbm.o(.constdata) refers to mbmfuncholding.o(i.mbm_HoldingReg_Read_Func) for mbm_HoldingReg_Read_Func
    mbm.o(.constdata) refers to mbmfuncholding.o(i.mbm_HoldingReg_SingleWrite_Func) for mbm_HoldingReg_SingleWrite_Func
    mbm.o(.constdata) refers to mbmfuncholding.o(i.mbm_HoldingReg_MultiWrite_Func) for mbm_HoldingReg_MultiWrite_Func
    mbm.o(.constdata) refers to mbmfuncholding.o(i.mbm_HoldingReg_MultiReadWrite_Func) for mbm_HoldingReg_MultiReadWrite_Func
    mbm.o(.constdata) refers to mbmfunccoils.o(i.mbm_Coils_Read_Func) for mbm_Coils_Read_Func
    mbm.o(.constdata) refers to mbmfunccoils.o(i.mbm_Coils_SingleWrite_Func) for mbm_Coils_SingleWrite_Func
    mbm.o(.constdata) refers to mbmfunccoils.o(i.mbm_Coils_MultiWrite_Func) for mbm_Coils_MultiWrite_Func
    mbm.o(.constdata) refers to mbmfuncdisc.o(i.mbm_DiscreteInput_Read_Func) for mbm_DiscreteInput_Read_Func
    mbmcrc16.o(i.mbm_CRC16Calc) refers to mbmcrc16.o(.constdata) for CRC16_HI
    mbmfuncinput.o(i.mbm_InputReg_Read_Func) refers to mbm.o(i.mbm_GetTxPDUBuffer) for mbm_GetTxPDUBuffer
    mbmfuncinput.o(i.mbm_InputReg_Read_Func) refers to mbmfuncinput.o(i.mbm_InputReg_Read_Calllback) for mbm_InputReg_Read_Calllback
    mbmfuncinput.o(i.uMBM_InputReg_Read) refers to mbm.o(i.mbm_GetTxPDUBuffer) for mbm_GetTxPDUBuffer
    mbmfuncinput.o(i.uMBM_InputReg_Read) refers to mbm.o(i.mbm_SetTxPDULength) for mbm_SetTxPDULength
    mbmfuncinput.o(i.uMBM_InputReg_Read) refers to mbm.o(i.uMBM_UserEvent2ErrorCode) for uMBM_UserEvent2ErrorCode
    mbmfunccoils.o(i.mbm_Coils_Calllback) refers to mbmutils.o(i.uMBM_Util_SetBits) for uMBM_Util_SetBits
    mbmfunccoils.o(i.mbm_Coils_MultiWrite_Func) refers to mbm.o(i.mbm_GetTxPDUBuffer) for mbm_GetTxPDUBuffer
    mbmfunccoils.o(i.mbm_Coils_MultiWrite_Func) refers to mbmfunccoils.o(i.mbm_Coils_Calllback) for mbm_Coils_Calllback
    mbmfunccoils.o(i.mbm_Coils_Read_Func) refers to mbm.o(i.mbm_GetTxPDUBuffer) for mbm_GetTxPDUBuffer
    mbmfunccoils.o(i.mbm_Coils_Read_Func) refers to mbmfunccoils.o(i.mbm_Coils_Calllback) for mbm_Coils_Calllback
    mbmfunccoils.o(i.mbm_Coils_SingleWrite_Func) refers to mbm.o(i.mbm_GetTxPDUBuffer) for mbm_GetTxPDUBuffer
    mbmfunccoils.o(i.mbm_Coils_SingleWrite_Func) refers to mbmfunccoils.o(i.mbm_Coils_Calllback) for mbm_Coils_Calllback
    mbmfunccoils.o(i.uMBM_Coils_MultiWrite) refers to mbm.o(i.mbm_GetTxPDUBuffer) for mbm_GetTxPDUBuffer
    mbmfunccoils.o(i.uMBM_Coils_MultiWrite) refers to mbm.o(i.mbm_SetTxPDULength) for mbm_SetTxPDULength
    mbmfunccoils.o(i.uMBM_Coils_MultiWrite) refers to mbm.o(i.uMBM_UserEvent2ErrorCode) for uMBM_UserEvent2ErrorCode
    mbmfunccoils.o(i.uMBM_Coils_Read) refers to mbm.o(i.mbm_GetTxPDUBuffer) for mbm_GetTxPDUBuffer
    mbmfunccoils.o(i.uMBM_Coils_Read) refers to mbm.o(i.mbm_SetTxPDULength) for mbm_SetTxPDULength
    mbmfunccoils.o(i.uMBM_Coils_Read) refers to mbm.o(i.uMBM_UserEvent2ErrorCode) for uMBM_UserEvent2ErrorCode
    mbmfunccoils.o(i.uMBM_Coils_SingleWrite) refers to mbm.o(i.mbm_GetTxPDUBuffer) for mbm_GetTxPDUBuffer
    mbmfunccoils.o(i.uMBM_Coils_SingleWrite) refers to mbm.o(i.mbm_SetTxPDULength) for mbm_SetTxPDULength
    mbmfunccoils.o(i.uMBM_Coils_SingleWrite) refers to mbm.o(i.uMBM_UserEvent2ErrorCode) for uMBM_UserEvent2ErrorCode
    mbmfuncholding.o(i.mbm_HoldingReg_MultiReadWrite_Func) refers to mbm.o(i.mbm_GetTxPDUBuffer) for mbm_GetTxPDUBuffer
    mbmfuncholding.o(i.mbm_HoldingReg_MultiReadWrite_Func) refers to mbmfuncholding.o(i.mbm_HoldingReg_Calllback) for mbm_HoldingReg_Calllback
    mbmfuncholding.o(i.mbm_HoldingReg_MultiWrite_Func) refers to mbm.o(i.mbm_GetTxPDUBuffer) for mbm_GetTxPDUBuffer
    mbmfuncholding.o(i.mbm_HoldingReg_MultiWrite_Func) refers to mbmfuncholding.o(i.mbm_HoldingReg_Calllback) for mbm_HoldingReg_Calllback
    mbmfuncholding.o(i.mbm_HoldingReg_Read_Func) refers to mbm.o(i.mbm_GetTxPDUBuffer) for mbm_GetTxPDUBuffer
    mbmfuncholding.o(i.mbm_HoldingReg_Read_Func) refers to mbmfuncholding.o(i.mbm_HoldingReg_Calllback) for mbm_HoldingReg_Calllback
    mbmfuncholding.o(i.mbm_HoldingReg_SingleWrite_Func) refers to mbmfuncholding.o(i.mbm_HoldingReg_Calllback) for mbm_HoldingReg_Calllback
    mbmfuncholding.o(i.uMBM_HoldingReg_MultiReadWrite) refers to mbm.o(i.mbm_GetTxPDUBuffer) for mbm_GetTxPDUBuffer
    mbmfuncholding.o(i.uMBM_HoldingReg_MultiReadWrite) refers to mbm.o(i.mbm_SetTxPDULength) for mbm_SetTxPDULength
    mbmfuncholding.o(i.uMBM_HoldingReg_MultiReadWrite) refers to mbm.o(i.uMBM_UserEvent2ErrorCode) for uMBM_UserEvent2ErrorCode
    mbmfuncholding.o(i.uMBM_HoldingReg_MultiWrite) refers to mbm.o(i.mbm_GetTxPDUBuffer) for mbm_GetTxPDUBuffer
    mbmfuncholding.o(i.uMBM_HoldingReg_MultiWrite) refers to mbm.o(i.mbm_SetTxPDULength) for mbm_SetTxPDULength
    mbmfuncholding.o(i.uMBM_HoldingReg_MultiWrite) refers to mbm.o(i.uMBM_UserEvent2ErrorCode) for uMBM_UserEvent2ErrorCode
    mbmfuncholding.o(i.uMBM_HoldingReg_Read) refers to mbm.o(i.mbm_GetTxPDUBuffer) for mbm_GetTxPDUBuffer
    mbmfuncholding.o(i.uMBM_HoldingReg_Read) refers to mbm.o(i.mbm_SetTxPDULength) for mbm_SetTxPDULength
    mbmfuncholding.o(i.uMBM_HoldingReg_Read) refers to mbm.o(i.uMBM_UserEvent2ErrorCode) for uMBM_UserEvent2ErrorCode
    mbmfuncholding.o(i.uMBM_HoldingReg_SingleWrite) refers to mbm.o(i.mbm_GetTxPDUBuffer) for mbm_GetTxPDUBuffer
    mbmfuncholding.o(i.uMBM_HoldingReg_SingleWrite) refers to mbm.o(i.mbm_SetTxPDULength) for mbm_SetTxPDULength
    mbmfuncholding.o(i.uMBM_HoldingReg_SingleWrite) refers to mbm.o(i.uMBM_UserEvent2ErrorCode) for uMBM_UserEvent2ErrorCode
    mbmfuncdisc.o(i.mbm_DiscreteInput_Read_Calllback) refers to mbmutils.o(i.uMBM_Util_SetBits) for uMBM_Util_SetBits
    mbmfuncdisc.o(i.mbm_DiscreteInput_Read_Func) refers to mbm.o(i.mbm_GetTxPDUBuffer) for mbm_GetTxPDUBuffer
    mbmfuncdisc.o(i.mbm_DiscreteInput_Read_Func) refers to mbmfuncdisc.o(i.mbm_DiscreteInput_Read_Calllback) for mbm_DiscreteInput_Read_Calllback
    mbmfuncdisc.o(i.uMBM_DiscreteInput_Read) refers to mbm.o(i.mbm_GetTxPDUBuffer) for mbm_GetTxPDUBuffer
    mbmfuncdisc.o(i.uMBM_DiscreteInput_Read) refers to mbm.o(i.mbm_SetTxPDULength) for mbm_SetTxPDULength
    mbmfuncdisc.o(i.uMBM_DiscreteInput_Read) refers to mbm.o(i.uMBM_UserEvent2ErrorCode) for uMBM_UserEvent2ErrorCode
    cmsis_os1.o(i.osMailAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for osMemoryPoolAlloc
    cmsis_os1.o(i.osMailCAlloc) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for osMemoryPoolGetBlockSize
    cmsis_os1.o(i.osMailCAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for osMemoryPoolAlloc
    cmsis_os1.o(i.osMailCAlloc) refers to memseta.o(.text) for __aeabi_memclr
    cmsis_os1.o(i.osMailCreate) refers to rtx_mempool.o(.text.osMemoryPoolNew) for osMemoryPoolNew
    cmsis_os1.o(i.osMailCreate) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    cmsis_os1.o(i.osMailCreate) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for osMemoryPoolDelete
    cmsis_os1.o(i.osMailCreate) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for osMessageQueueDelete
    cmsis_os1.o(i.osMailFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for osMemoryPoolFree
    cmsis_os1.o(i.osMailGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    cmsis_os1.o(i.osMailPut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    cmsis_os1.o(i.osMessageCreate) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    cmsis_os1.o(i.osMessageGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    cmsis_os1.o(i.osMessagePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    cmsis_os1.o(i.osMutexCreate) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    cmsis_os1.o(i.osPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for osMemoryPoolAlloc
    cmsis_os1.o(i.osPoolCAlloc) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for osMemoryPoolGetBlockSize
    cmsis_os1.o(i.osPoolCAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for osMemoryPoolAlloc
    cmsis_os1.o(i.osPoolCAlloc) refers to memseta.o(.text) for __aeabi_memclr
    cmsis_os1.o(i.osPoolCreate) refers to rtx_mempool.o(.text.osMemoryPoolNew) for osMemoryPoolNew
    cmsis_os1.o(i.osPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for osMemoryPoolFree
    cmsis_os1.o(i.osSemaphoreCreate) refers to rtx_semaphore.o(.text.osSemaphoreNew) for osSemaphoreNew
    cmsis_os1.o(i.osSemaphoreWait) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    cmsis_os1.o(i.osSemaphoreWait) refers to rtx_semaphore.o(.text.osSemaphoreGetCount) for osSemaphoreGetCount
    cmsis_os1.o(i.osSignalClear) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    cmsis_os1.o(i.osSignalClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for osThreadFlagsClear
    cmsis_os1.o(i.osSignalSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    cmsis_os1.o(i.osSignalWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    cmsis_os1.o(i.osThreadCreate) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    cmsis_os1.o(i.osTimerCreate) refers to rtx_timer.o(.text.osTimerNew) for osTimerNew
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.data) refers to irq_cm0.o(.constdata) for irqRtxLib
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    rtx_config.o(i.osRtxErrorNotify) refers to mbm.o(i.__ARM_common_switch8) for __ARM_common_switch8
    startup_stm32f072.o(RESET) refers to startup_stm32f072.o(STACK) for __initial_sp
    startup_stm32f072.o(RESET) refers to startup_stm32f072.o(.text) for Reset_Handler
    startup_stm32f072.o(RESET) refers to irq_cm0.o(.text) for SVC_Handler
    startup_stm32f072.o(RESET) refers to pmtimer.o(i.TIM15_IRQHandler) for TIM15_IRQHandler
    startup_stm32f072.o(RESET) refers to pmserial.o(i.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32f072.o(.text) refers to startup_stm32f072.o(STACK) for __initial_sp
    startup_stm32f072.o(.text) refers to system_stm32f0xx.o(i.SystemInit) for SystemInit
    startup_stm32f072.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_stm32f0xx.o(i.SystemCoreClockUpdate) refers to uidiv.o(.text) for __aeabi_uidivmod
    system_stm32f0xx.o(i.SystemCoreClockUpdate) refers to system_stm32f0xx.o(.data) for SystemCoreClock
    system_stm32f0xx.o(i.SystemInit) refers to system_stm32f0xx.o(i.SetSysClock) for SetSysClock
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to memseta.o(.text) for __aeabi_memclr8
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_system.o(.text.osRtxSysTimerSetup) for osRtxSysTimerSetup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_system.o(.text.osRtxSysTimerEnable) for osRtxSysTimerEnable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_config.o(i.osRtxIdleThread) for osRtxIdleThread
    rtx_kernel.o(.text.svcRtxKernelStart) refers to system_stm32f0xx.o(.data) for SystemCoreClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_system.o(.text.osRtxSysTimerDisable) for osRtxSysTimerDisable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_system.o(.text.osRtxSysTimerEnable) for osRtxSysTimerEnable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_system.o(.text.osRtxSysTimerGetCount) for osRtxSysTimerGetCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to rtx_system.o(.text.osRtxSysTimerGetFreq) for osRtxSysTimerGetFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_system.o(.text.osRtxSysTimerGetCount) for osRtxSysTimerGetCount
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_system.o(.text.osRtxSysTimerGetFreq) for osRtxSysTimerGetFreq
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.data.irqRtxLibRef) refers to irq_cm0.o(.constdata) for irqRtxLib
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot) refers to rtx_thread.o(.text.osRtxThreadListRoot) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to memseta.o(.text) for __aeabi_memset4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for osRtxSemaphorePostProcess
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for svcRtxSemaphoreNew
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for svcRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.osSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for svcRtxSemaphoreAcquire
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for svcRtxSemaphoreRelease
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for svcRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for svcRtxSemaphoreDelete
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    irq_cm0.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm0.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm0.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm0.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxSysTimerAckIRQ) for osRtxSysTimerAckIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerAckIRQ) refers to rtx_system.o(.text.osRtxSysTimerAckIRQ) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxSysTimerSetup) refers to uidiv.o(.text) for __aeabi_uidiv
    rtx_system.o(.text.osRtxSysTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxSysTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerSetup) refers to rtx_system.o(.text.osRtxSysTimerSetup) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerEnable) refers to rtx_system.o(.text.osRtxSysTimerEnable) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerDisable) refers to rtx_system.o(.text.osRtxSysTimerDisable) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxSysTimerGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetCount) refers to rtx_system.o(.text.osRtxSysTimerGetCount) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxSysTimerGetFreq) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetFreq) refers to rtx_system.o(.text.osRtxSysTimerGetFreq) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    idiv.o(.text) refers to uidiv.o(.text) for __aeabi_uidivmod
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_stm32f072.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_stm32f072.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to th_main.o(i.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to th_main.o(i.main) for main
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing th_main.o(.rev16_text), (4 bytes).
    Removing th_main.o(.revsh_text), (4 bytes).
    Removing th_modbusmaster.o(.rev16_text), (4 bytes).
    Removing th_modbusmaster.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_adc.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_adc.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_adc.o(i.ADC_AnalogWatchdogCmd), (28 bytes).
    Removing stm32f0xx_adc.o(i.ADC_AnalogWatchdogSingleChannelCmd), (28 bytes).
    Removing stm32f0xx_adc.o(i.ADC_AnalogWatchdogSingleChannelConfig), (28 bytes).
    Removing stm32f0xx_adc.o(i.ADC_AnalogWatchdogThresholdsConfig), (8 bytes).
    Removing stm32f0xx_adc.o(i.ADC_AutoPowerOffCmd), (28 bytes).
    Removing stm32f0xx_adc.o(i.ADC_ChannelConfig), (24 bytes).
    Removing stm32f0xx_adc.o(i.ADC_ClearFlag), (4 bytes).
    Removing stm32f0xx_adc.o(i.ADC_ClearITPendingBit), (4 bytes).
    Removing stm32f0xx_adc.o(i.ADC_ClockModeConfig), (4 bytes).
    Removing stm32f0xx_adc.o(i.ADC_Cmd), (24 bytes).
    Removing stm32f0xx_adc.o(i.ADC_ContinuousModeCmd), (28 bytes).
    Removing stm32f0xx_adc.o(i.ADC_DMACmd), (24 bytes).
    Removing stm32f0xx_adc.o(i.ADC_DMARequestModeConfig), (16 bytes).
    Removing stm32f0xx_adc.o(i.ADC_DeInit), (32 bytes).
    Removing stm32f0xx_adc.o(i.ADC_DiscModeCmd), (28 bytes).
    Removing stm32f0xx_adc.o(i.ADC_GetCalibrationFactor), (60 bytes).
    Removing stm32f0xx_adc.o(i.ADC_GetConversionValue), (8 bytes).
    Removing stm32f0xx_adc.o(i.ADC_GetFlagStatus), (48 bytes).
    Removing stm32f0xx_adc.o(i.ADC_GetITStatus), (34 bytes).
    Removing stm32f0xx_adc.o(i.ADC_ITConfig), (20 bytes).
    Removing stm32f0xx_adc.o(i.ADC_Init), (44 bytes).
    Removing stm32f0xx_adc.o(i.ADC_JitterCmd), (20 bytes).
    Removing stm32f0xx_adc.o(i.ADC_OverrunModeCmd), (28 bytes).
    Removing stm32f0xx_adc.o(i.ADC_StartOfConversion), (10 bytes).
    Removing stm32f0xx_adc.o(i.ADC_StopOfConversion), (10 bytes).
    Removing stm32f0xx_adc.o(i.ADC_StructInit), (16 bytes).
    Removing stm32f0xx_adc.o(i.ADC_TempSensorCmd), (40 bytes).
    Removing stm32f0xx_adc.o(i.ADC_VbatCmd), (40 bytes).
    Removing stm32f0xx_adc.o(i.ADC_VrefintCmd), (40 bytes).
    Removing stm32f0xx_adc.o(i.ADC_WaitModeCmd), (28 bytes).
    Removing stm32f0xx_can.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_can.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_can.o(i.CAN_CancelTransmit), (54 bytes).
    Removing stm32f0xx_can.o(i.CAN_ClearFlag), (68 bytes).
    Removing stm32f0xx_can.o(i.CAN_ClearITPendingBit), (188 bytes).
    Removing stm32f0xx_can.o(i.CAN_DBGFreeze), (28 bytes).
    Removing stm32f0xx_can.o(i.CAN_DeInit), (24 bytes).
    Removing stm32f0xx_can.o(i.CAN_FIFORelease), (24 bytes).
    Removing stm32f0xx_can.o(i.CAN_FilterInit), (252 bytes).
    Removing stm32f0xx_can.o(i.CAN_GetFlagStatus), (146 bytes).
    Removing stm32f0xx_can.o(i.CAN_GetITStatus), (312 bytes).
    Removing stm32f0xx_can.o(i.CAN_GetLSBTransmitErrorCounter), (16 bytes).
    Removing stm32f0xx_can.o(i.CAN_GetLastErrorCode), (14 bytes).
    Removing stm32f0xx_can.o(i.CAN_GetReceiveErrorCounter), (10 bytes).
    Removing stm32f0xx_can.o(i.CAN_ITConfig), (20 bytes).
    Removing stm32f0xx_can.o(i.CAN_Init), (284 bytes).
    Removing stm32f0xx_can.o(i.CAN_MessagePending), (32 bytes).
    Removing stm32f0xx_can.o(i.CAN_OperatingModeRequest), (172 bytes).
    Removing stm32f0xx_can.o(i.CAN_Receive), (262 bytes).
    Removing stm32f0xx_can.o(i.CAN_SlaveStartBank), (56 bytes).
    Removing stm32f0xx_can.o(i.CAN_Sleep), (30 bytes).
    Removing stm32f0xx_can.o(i.CAN_StructInit), (32 bytes).
    Removing stm32f0xx_can.o(i.CAN_TTComModeCmd), (128 bytes).
    Removing stm32f0xx_can.o(i.CAN_Transmit), (308 bytes).
    Removing stm32f0xx_can.o(i.CAN_TransmitStatus), (176 bytes).
    Removing stm32f0xx_can.o(i.CAN_WakeUp), (52 bytes).
    Removing stm32f0xx_can.o(i.CheckITStatus), (20 bytes).
    Removing stm32f0xx_cec.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_cec.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_cec.o(i.CEC_ClearFlag), (12 bytes).
    Removing stm32f0xx_cec.o(i.CEC_ClearITPendingBit), (12 bytes).
    Removing stm32f0xx_cec.o(i.CEC_Cmd), (36 bytes).
    Removing stm32f0xx_cec.o(i.CEC_DeInit), (22 bytes).
    Removing stm32f0xx_cec.o(i.CEC_EndOfMessage), (20 bytes).
    Removing stm32f0xx_cec.o(i.CEC_GetFlagStatus), (28 bytes).
    Removing stm32f0xx_cec.o(i.CEC_GetITStatus), (40 bytes).
    Removing stm32f0xx_cec.o(i.CEC_ITConfig), (36 bytes).
    Removing stm32f0xx_cec.o(i.CEC_Init), (52 bytes).
    Removing stm32f0xx_cec.o(i.CEC_ListenModeCmd), (40 bytes).
    Removing stm32f0xx_cec.o(i.CEC_OwnAddressClear), (12 bytes).
    Removing stm32f0xx_cec.o(i.CEC_OwnAddressConfig), (28 bytes).
    Removing stm32f0xx_cec.o(i.CEC_ReceiveData), (12 bytes).
    Removing stm32f0xx_cec.o(i.CEC_SendData), (12 bytes).
    Removing stm32f0xx_cec.o(i.CEC_StartOfMessage), (20 bytes).
    Removing stm32f0xx_cec.o(i.CEC_StructInit), (18 bytes).
    Removing stm32f0xx_comp.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_comp.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_comp.o(i.COMP_Cmd), (40 bytes).
    Removing stm32f0xx_comp.o(i.COMP_DeInit), (12 bytes).
    Removing stm32f0xx_comp.o(i.COMP_GetOutputLevel), (36 bytes).
    Removing stm32f0xx_comp.o(i.COMP_Init), (56 bytes).
    Removing stm32f0xx_comp.o(i.COMP_LockConfig), (24 bytes).
    Removing stm32f0xx_comp.o(i.COMP_StructInit), (16 bytes).
    Removing stm32f0xx_comp.o(i.COMP_SwitchCmd), (36 bytes).
    Removing stm32f0xx_comp.o(i.COMP_WindowCmd), (40 bytes).
    Removing stm32f0xx_crc.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_crc.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_crc.o(i.CRC_CalcBlockCRC), (36 bytes).
    Removing stm32f0xx_crc.o(i.CRC_CalcCRC), (16 bytes).
    Removing stm32f0xx_crc.o(i.CRC_CalcCRC16bits), (16 bytes).
    Removing stm32f0xx_crc.o(i.CRC_CalcCRC8bits), (16 bytes).
    Removing stm32f0xx_crc.o(i.CRC_DeInit), (36 bytes).
    Removing stm32f0xx_crc.o(i.CRC_GetCRC), (12 bytes).
    Removing stm32f0xx_crc.o(i.CRC_GetIDRegister), (12 bytes).
    Removing stm32f0xx_crc.o(i.CRC_PolynomialSizeSelect), (32 bytes).
    Removing stm32f0xx_crc.o(i.CRC_ResetDR), (20 bytes).
    Removing stm32f0xx_crc.o(i.CRC_ReverseInputDataSelect), (32 bytes).
    Removing stm32f0xx_crc.o(i.CRC_ReverseOutputDataCmd), (36 bytes).
    Removing stm32f0xx_crc.o(i.CRC_SetIDRegister), (12 bytes).
    Removing stm32f0xx_crc.o(i.CRC_SetInitRegister), (12 bytes).
    Removing stm32f0xx_crc.o(i.CRC_SetPolynomial), (12 bytes).
    Removing stm32f0xx_crs.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_crs.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_crs.o(i.CRS_AdjustHSI48CalibrationValue), (32 bytes).
    Removing stm32f0xx_crs.o(i.CRS_AutomaticCalibrationCmd), (36 bytes).
    Removing stm32f0xx_crs.o(i.CRS_ClearFlag), (40 bytes).
    Removing stm32f0xx_crs.o(i.CRS_ClearITPendingBit), (40 bytes).
    Removing stm32f0xx_crs.o(i.CRS_DeInit), (22 bytes).
    Removing stm32f0xx_crs.o(i.CRS_FrequencyErrorCounterCmd), (36 bytes).
    Removing stm32f0xx_crs.o(i.CRS_FrequencyErrorCounterReload), (28 bytes).
    Removing stm32f0xx_crs.o(i.CRS_FrequencyErrorLimitConfig), (28 bytes).
    Removing stm32f0xx_crs.o(i.CRS_GetFlagStatus), (16 bytes).
    Removing stm32f0xx_crs.o(i.CRS_GetFrequencyErrorDirection), (16 bytes).
    Removing stm32f0xx_crs.o(i.CRS_GetFrequencyErrorValue), (16 bytes).
    Removing stm32f0xx_crs.o(i.CRS_GetHSI48CalibrationValue), (20 bytes).
    Removing stm32f0xx_crs.o(i.CRS_GetITStatus), (16 bytes).
    Removing stm32f0xx_crs.o(i.CRS_GetReloadValue), (12 bytes).
    Removing stm32f0xx_crs.o(i.CRS_ITConfig), (32 bytes).
    Removing stm32f0xx_crs.o(i.CRS_SoftwareSynchronizationGenerate), (20 bytes).
    Removing stm32f0xx_crs.o(i.CRS_SynchronizationPolarityConfig), (28 bytes).
    Removing stm32f0xx_crs.o(i.CRS_SynchronizationPrescalerConfig), (28 bytes).
    Removing stm32f0xx_crs.o(i.CRS_SynchronizationSourceConfig), (28 bytes).
    Removing stm32f0xx_dac.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_dac.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_dac.o(i.DAC_ClearFlag), (16 bytes).
    Removing stm32f0xx_dac.o(i.DAC_ClearITPendingBit), (16 bytes).
    Removing stm32f0xx_dac.o(i.DAC_Cmd), (40 bytes).
    Removing stm32f0xx_dac.o(i.DAC_DMACmd), (44 bytes).
    Removing stm32f0xx_dac.o(i.DAC_DeInit), (22 bytes).
    Removing stm32f0xx_dac.o(i.DAC_DualSoftwareTriggerCmd), (36 bytes).
    Removing stm32f0xx_dac.o(i.DAC_GetDataOutputValue), (36 bytes).
    Removing stm32f0xx_dac.o(i.DAC_GetFlagStatus), (32 bytes).
    Removing stm32f0xx_dac.o(i.DAC_GetITStatus), (52 bytes).
    Removing stm32f0xx_dac.o(i.DAC_ITConfig), (44 bytes).
    Removing stm32f0xx_dac.o(i.DAC_Init), (56 bytes).
    Removing stm32f0xx_dac.o(i.DAC_SetChannel1Data), (32 bytes).
    Removing stm32f0xx_dac.o(i.DAC_SetChannel2Data), (32 bytes).
    Removing stm32f0xx_dac.o(i.DAC_SetDualChannelData), (40 bytes).
    Removing stm32f0xx_dac.o(i.DAC_SoftwareTriggerCmd), (48 bytes).
    Removing stm32f0xx_dac.o(i.DAC_StructInit), (12 bytes).
    Removing stm32f0xx_dac.o(i.DAC_WaveGenerationCmd), (44 bytes).
    Removing stm32f0xx_dbgmcu.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_dbgmcu.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_dbgmcu.o(i.DBGMCU_APB1PeriphConfig), (32 bytes).
    Removing stm32f0xx_dbgmcu.o(i.DBGMCU_APB2PeriphConfig), (32 bytes).
    Removing stm32f0xx_dbgmcu.o(i.DBGMCU_Config), (32 bytes).
    Removing stm32f0xx_dbgmcu.o(i.DBGMCU_GetDEVID), (16 bytes).
    Removing stm32f0xx_dbgmcu.o(i.DBGMCU_GetREVID), (12 bytes).
    Removing stm32f0xx_dma.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_dma.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_dma.o(i.DMA_ClearFlag), (32 bytes).
    Removing stm32f0xx_dma.o(i.DMA_ClearITPendingBit), (32 bytes).
    Removing stm32f0xx_dma.o(i.DMA_Cmd), (28 bytes).
    Removing stm32f0xx_dma.o(i.DMA_DeInit), (356 bytes).
    Removing stm32f0xx_dma.o(i.DMA_GetCurrDataCounter), (8 bytes).
    Removing stm32f0xx_dma.o(i.DMA_GetFlagStatus), (52 bytes).
    Removing stm32f0xx_dma.o(i.DMA_GetITStatus), (52 bytes).
    Removing stm32f0xx_dma.o(i.DMA_ITConfig), (20 bytes).
    Removing stm32f0xx_dma.o(i.DMA_Init), (64 bytes).
    Removing stm32f0xx_dma.o(i.DMA_RemapConfig), (52 bytes).
    Removing stm32f0xx_dma.o(i.DMA_SetCurrDataCounter), (4 bytes).
    Removing stm32f0xx_dma.o(i.DMA_StructInit), (26 bytes).
    Removing stm32f0xx_exti.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_exti.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_exti.o(i.EXTI_ClearFlag), (12 bytes).
    Removing stm32f0xx_exti.o(i.EXTI_ClearITPendingBit), (12 bytes).
    Removing stm32f0xx_exti.o(i.EXTI_DeInit), (32 bytes).
    Removing stm32f0xx_exti.o(i.EXTI_GenerateSWInterrupt), (16 bytes).
    Removing stm32f0xx_exti.o(i.EXTI_GetFlagStatus), (28 bytes).
    Removing stm32f0xx_exti.o(i.EXTI_GetITStatus), (28 bytes).
    Removing stm32f0xx_exti.o(i.EXTI_Init), (136 bytes).
    Removing stm32f0xx_exti.o(i.EXTI_StructInit), (16 bytes).
    Removing stm32f0xx_flash.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_flash.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_ClearFlag), (12 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_EraseAllPages), (72 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_ErasePage), (76 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_GetFlagStatus), (28 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_GetPrefetchBufferStatus), (28 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_GetStatus), (60 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_ITConfig), (32 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_Lock), (20 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_OB_BOOT0Config), (80 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_OB_BOOT0SWConfig), (80 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_OB_BOOTConfig), (80 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_OB_EnableWRP), (184 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_OB_Erase), (152 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_OB_GetRDP), (28 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_OB_GetUser), (16 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_OB_GetWRP), (12 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_OB_Launch), (20 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_OB_Lock), (20 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_OB_ProgramData), (72 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_OB_RDPConfig), (144 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_OB_SRAMParityConfig), (80 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_OB_Unlock), (40 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_OB_UserConfig), (88 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_OB_VDDAConfig), (80 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_OB_WriteUser), (76 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_PrefetchBufferCmd), (36 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_ProgramHalfWord), (68 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_ProgramWord), (108 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_SetLatency), (28 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_Unlock), (36 bytes).
    Removing stm32f0xx_flash.o(i.FLASH_WaitForLastOperation), (40 bytes).
    Removing stm32f0xx_gpio.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_gpio.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_gpio.o(i.GPIO_DeInit), (176 bytes).
    Removing stm32f0xx_gpio.o(i.GPIO_PinLockConfig), (34 bytes).
    Removing stm32f0xx_gpio.o(i.GPIO_ReadInputData), (6 bytes).
    Removing stm32f0xx_gpio.o(i.GPIO_ReadInputDataBit), (20 bytes).
    Removing stm32f0xx_gpio.o(i.GPIO_ReadOutputData), (6 bytes).
    Removing stm32f0xx_gpio.o(i.GPIO_ReadOutputDataBit), (20 bytes).
    Removing stm32f0xx_gpio.o(i.GPIO_ResetBits), (4 bytes).
    Removing stm32f0xx_gpio.o(i.GPIO_SetBits), (4 bytes).
    Removing stm32f0xx_gpio.o(i.GPIO_StructInit), (24 bytes).
    Removing stm32f0xx_gpio.o(i.GPIO_Write), (4 bytes).
    Removing stm32f0xx_gpio.o(i.GPIO_WriteBit), (12 bytes).
    Removing stm32f0xx_i2c.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_i2c.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_10BitAddressHeaderCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_10BitAddressingModeCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_AcknowledgeConfig), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_AutoEndCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_CalculatePEC), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_ClearFlag), (4 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_ClearITPendingBit), (4 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_ClockTimeoutCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_Cmd), (24 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_DMACmd), (20 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_DeInit), (56 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_DualAddressCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_ExtendedClockTimeoutCmd), (26 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_GeneralCallCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_GenerateSTART), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_GenerateSTOP), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_GetAddressMatched), (14 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_GetFlagStatus), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_GetITStatus), (78 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_GetPEC), (8 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_GetTransferDirection), (30 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_ITConfig), (20 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_IdleClockTimeoutCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_Init), (108 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_MasterRequestConfig), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_NumberOfBytesConfig), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_OwnAddress2Config), (36 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_PECRequestCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_ReadRegister), (22 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_ReceiveData), (8 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_ReloadCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_SMBusAlertCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_SendData), (4 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_SlaveAddressConfig), (20 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_SlaveByteControlCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_SoftwareResetCmd), (20 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_StopModeCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_StretchClockCmd), (28 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_StructInit), (24 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_TimeoutAConfig), (20 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_TimeoutBConfig), (32 bytes).
    Removing stm32f0xx_i2c.o(i.I2C_TransferHandling), (44 bytes).
    Removing stm32f0xx_iwdg.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_iwdg.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_iwdg.o(i.IWDG_Enable), (16 bytes).
    Removing stm32f0xx_iwdg.o(i.IWDG_GetFlagStatus), (28 bytes).
    Removing stm32f0xx_iwdg.o(i.IWDG_ReloadCounter), (16 bytes).
    Removing stm32f0xx_iwdg.o(i.IWDG_SetPrescaler), (12 bytes).
    Removing stm32f0xx_iwdg.o(i.IWDG_SetReload), (12 bytes).
    Removing stm32f0xx_iwdg.o(i.IWDG_SetWindowValue), (12 bytes).
    Removing stm32f0xx_iwdg.o(i.IWDG_WriteAccessCmd), (12 bytes).
    Removing stm32f0xx_misc.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_misc.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_misc.o(i.NVIC_SystemLPConfig), (32 bytes).
    Removing stm32f0xx_misc.o(i.SysTick_CLKSourceConfig), (36 bytes).
    Removing stm32f0xx_pwr.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_pwr.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_pwr.o(i.PWR_BackupAccessCmd), (40 bytes).
    Removing stm32f0xx_pwr.o(i.PWR_ClearFlag), (20 bytes).
    Removing stm32f0xx_pwr.o(i.PWR_DeInit), (22 bytes).
    Removing stm32f0xx_pwr.o(i.PWR_EnterSTANDBYMode), (36 bytes).
    Removing stm32f0xx_pwr.o(i.PWR_EnterSTOPMode), (100 bytes).
    Removing stm32f0xx_pwr.o(i.PWR_EnterSleepMode), (32 bytes).
    Removing stm32f0xx_pwr.o(i.PWR_GetFlagStatus), (28 bytes).
    Removing stm32f0xx_pwr.o(i.PWR_PVDCmd), (36 bytes).
    Removing stm32f0xx_pwr.o(i.PWR_PVDLevelConfig), (32 bytes).
    Removing stm32f0xx_pwr.o(i.PWR_WakeUpPinCmd), (32 bytes).
    Removing stm32f0xx_rcc.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_rcc.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_ADCCLKConfig), (56 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_AHBPeriphResetCmd), (32 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_APB1PeriphClockCmd), (32 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_APB1PeriphResetCmd), (32 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_APB2PeriphResetCmd), (32 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_AdjustHSI14CalibrationValue), (32 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_AdjustHSICalibrationValue), (32 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_BackupResetCmd), (40 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_CECCLKConfig), (28 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_ClearFlag), (20 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_ClearITPendingBit), (12 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_ClockSecuritySystemCmd), (40 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_DeInit), (120 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_GetFlagStatus), (72 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_GetITStatus), (28 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_GetSYSCLKSource), (16 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_HCLKConfig), (32 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_HSEConfig), (16 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_HSI14ADCRequestCmd), (36 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_HSI14Cmd), (36 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_HSI48Cmd), (40 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_HSICmd), (36 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_I2CCLKConfig), (28 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_ITConfig), (32 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_LSEConfig), (40 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_LSEDriveConfig), (28 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_LSICmd), (36 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_MCOConfig), (28 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_PCLKConfig), (36 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_PLLCmd), (40 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_PLLConfig), (36 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_PREDIV1Config), (28 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_RTCCLKCmd), (40 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_RTCCLKConfig), (16 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_SYSCLKConfig), (28 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_USARTCLKConfig), (72 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_USBCLKConfig), (28 bytes).
    Removing stm32f0xx_rcc.o(i.RCC_WaitForHSEStartUp), (60 bytes).
    Removing stm32f0xx_rtc.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_rtc.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_AlarmCmd), (112 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_AlarmStructInit), (22 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_AlarmSubSecondConfig), (40 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_Bcd2ToByte), (26 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_BypassShadowCmd), (52 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_ByteToBcd2), (28 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_CalibOutputCmd), (56 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_CalibOutputConfig), (44 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_ClearFlag), (32 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_ClearITPendingBit), (36 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_DateStructInit), (14 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_DayLightSavingConfig), (48 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_DeInit), (116 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_EnterInitMode), (88 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_ExitInitMode), (20 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_GetAlarm), (120 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_GetAlarmSubSecond), (20 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_GetDate), (96 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_GetFlagStatus), (44 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_GetITStatus), (76 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_GetStoreOperation), (16 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_GetSubSecond), (16 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_GetTime), (92 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_GetTimeStamp), (164 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_GetTimeStampSubSecond), (12 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_GetWakeUpCounter), (12 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_ITConfig), (100 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_Init), (88 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_OutputConfig), (48 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_OutputTypeConfig), (28 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_ReadBackupRegister), (32 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_RefClockCmd), (76 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_SetAlarm), (216 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_SetDate), (208 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_SetTime), (216 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_SetWakeUpCounter), (24 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_SmoothCalibConfig), (96 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_StructInit), (14 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_SynchroShiftConfig), (124 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_TamperCmd), (32 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_TamperFilterConfig), (28 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_TamperPinsPrechargeDuration), (28 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_TamperPullUpCmd), (40 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_TamperSamplingFreqConfig), (28 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_TamperTriggerConfig), (36 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_TimeStampCmd), (64 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_TimeStampOnTamperDetectionCmd), (36 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_TimeStructInit), (12 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_WaitForSynchro), (108 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_WakeUpClockConfig), (40 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_WakeUpCmd), (116 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_WriteBackupRegister), (28 bytes).
    Removing stm32f0xx_rtc.o(i.RTC_WriteProtectionCmd), (28 bytes).
    Removing stm32f0xx_spi.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_spi.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_spi.o(i.I2S_Cmd), (32 bytes).
    Removing stm32f0xx_spi.o(i.I2S_Init), (232 bytes).
    Removing stm32f0xx_spi.o(i.I2S_StructInit), (20 bytes).
    Removing stm32f0xx_spi.o(i.SPI_BiDirectionalLineConfig), (32 bytes).
    Removing stm32f0xx_spi.o(i.SPI_CRCLengthConfig), (20 bytes).
    Removing stm32f0xx_spi.o(i.SPI_CalculateCRC), (32 bytes).
    Removing stm32f0xx_spi.o(i.SPI_Cmd), (28 bytes).
    Removing stm32f0xx_spi.o(i.SPI_DataSizeConfig), (24 bytes).
    Removing stm32f0xx_spi.o(i.SPI_GetCRC), (16 bytes).
    Removing stm32f0xx_spi.o(i.SPI_GetCRCPolynomial), (6 bytes).
    Removing stm32f0xx_spi.o(i.SPI_GetReceptionFIFOStatus), (12 bytes).
    Removing stm32f0xx_spi.o(i.SPI_GetTransmissionFIFOStatus), (12 bytes).
    Removing stm32f0xx_spi.o(i.SPI_I2S_ClearFlag), (6 bytes).
    Removing stm32f0xx_spi.o(i.SPI_I2S_DMACmd), (20 bytes).
    Removing stm32f0xx_spi.o(i.SPI_I2S_DeInit), (60 bytes).
    Removing stm32f0xx_spi.o(i.SPI_I2S_GetFlagStatus), (20 bytes).
    Removing stm32f0xx_spi.o(i.SPI_I2S_GetITStatus), (56 bytes).
    Removing stm32f0xx_spi.o(i.SPI_I2S_ITConfig), (34 bytes).
    Removing stm32f0xx_spi.o(i.SPI_I2S_ReceiveData16), (6 bytes).
    Removing stm32f0xx_spi.o(i.SPI_I2S_SendData16), (4 bytes).
    Removing stm32f0xx_spi.o(i.SPI_Init), (88 bytes).
    Removing stm32f0xx_spi.o(i.SPI_LastDMATransferCmd), (20 bytes).
    Removing stm32f0xx_spi.o(i.SPI_NSSInternalSoftwareConfig), (32 bytes).
    Removing stm32f0xx_spi.o(i.SPI_NSSPulseModeCmd), (28 bytes).
    Removing stm32f0xx_spi.o(i.SPI_ReceiveData8), (12 bytes).
    Removing stm32f0xx_spi.o(i.SPI_RxFIFOThresholdConfig), (20 bytes).
    Removing stm32f0xx_spi.o(i.SPI_SSOutputCmd), (28 bytes).
    Removing stm32f0xx_spi.o(i.SPI_SendData8), (10 bytes).
    Removing stm32f0xx_spi.o(i.SPI_StructInit), (30 bytes).
    Removing stm32f0xx_spi.o(i.SPI_TIModeCmd), (28 bytes).
    Removing stm32f0xx_spi.o(i.SPI_TransmitCRC), (12 bytes).
    Removing stm32f0xx_syscfg.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_syscfg.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_syscfg.o(i.SYSCFG_BreakConfig), (16 bytes).
    Removing stm32f0xx_syscfg.o(i.SYSCFG_ClearFlag), (16 bytes).
    Removing stm32f0xx_syscfg.o(i.SYSCFG_DMAChannelRemapConfig), (32 bytes).
    Removing stm32f0xx_syscfg.o(i.SYSCFG_DeInit), (44 bytes).
    Removing stm32f0xx_syscfg.o(i.SYSCFG_EXTILineConfig), (64 bytes).
    Removing stm32f0xx_syscfg.o(i.SYSCFG_GetFlagStatus), (32 bytes).
    Removing stm32f0xx_syscfg.o(i.SYSCFG_GetPendingIT), (24 bytes).
    Removing stm32f0xx_syscfg.o(i.SYSCFG_I2CFastModePlusConfig), (32 bytes).
    Removing stm32f0xx_syscfg.o(i.SYSCFG_IRDAEnvSelection), (28 bytes).
    Removing stm32f0xx_syscfg.o(i.SYSCFG_MemoryRemapConfig), (28 bytes).
    Removing stm32f0xx_tim.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_tim.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_tim.o(i.TI1_Config), (56 bytes).
    Removing stm32f0xx_tim.o(i.TI2_Config), (76 bytes).
    Removing stm32f0xx_tim.o(i.TI3_Config), (72 bytes).
    Removing stm32f0xx_tim.o(i.TI4_Config), (80 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ARRPreloadConfig), (28 bytes).
    Removing stm32f0xx_tim.o(i.TIM_BDTRConfig), (32 bytes).
    Removing stm32f0xx_tim.o(i.TIM_BDTRStructInit), (18 bytes).
    Removing stm32f0xx_tim.o(i.TIM_CCPreloadControl), (28 bytes).
    Removing stm32f0xx_tim.o(i.TIM_CCxCmd), (30 bytes).
    Removing stm32f0xx_tim.o(i.TIM_CCxNCmd), (30 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ClearFlag), (6 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ClearOC1Ref), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ClearOC2Ref), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ClearOC3Ref), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ClearOC4Ref), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_CounterModeConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_CtrlPWMOutputs), (34 bytes).
    Removing stm32f0xx_tim.o(i.TIM_DMACmd), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_DMAConfig), (12 bytes).
    Removing stm32f0xx_tim.o(i.TIM_DeInit), (260 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ETRClockMode1Config), (52 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ETRClockMode2Config), (34 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ETRConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_EncoderInterfaceConfig), (68 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ForcedOC1Config), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ForcedOC2Config), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ForcedOC3Config), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ForcedOC4Config), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_GenerateEvent), (4 bytes).
    Removing stm32f0xx_tim.o(i.TIM_GetCapture1), (6 bytes).
    Removing stm32f0xx_tim.o(i.TIM_GetCapture2), (6 bytes).
    Removing stm32f0xx_tim.o(i.TIM_GetCapture3), (6 bytes).
    Removing stm32f0xx_tim.o(i.TIM_GetCapture4), (6 bytes).
    Removing stm32f0xx_tim.o(i.TIM_GetCounter), (6 bytes).
    Removing stm32f0xx_tim.o(i.TIM_GetFlagStatus), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_GetITStatus), (38 bytes).
    Removing stm32f0xx_tim.o(i.TIM_GetPrescaler), (6 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ICInit), (112 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ICStructInit), (18 bytes).
    Removing stm32f0xx_tim.o(i.TIM_ITRxExternalClockConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_InternalClockConfig), (16 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC1FastConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC1Init), (148 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC1NPolarityConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC1PolarityConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC1PreloadConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC2FastConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC2Init), (172 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC2NPolarityConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC2PolarityConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC2PreloadConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC3FastConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC3Init), (152 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC3NPolarityConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC3PolarityConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC3PreloadConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC4FastConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC4Init), (112 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC4PolarityConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OC4PreloadConfig), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_OCStructInit), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_PWMIConfig), (124 bytes).
    Removing stm32f0xx_tim.o(i.TIM_PrescalerConfig), (6 bytes).
    Removing stm32f0xx_tim.o(i.TIM_RemapConfig), (6 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SelectCCDMA), (28 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SelectCOM), (28 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SelectHallSensor), (28 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SelectInputTrigger), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SelectMasterSlaveMode), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SelectOCREFClear), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SelectOCxM), (82 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SelectOnePulseMode), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SelectOutputTrigger), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SelectSlaveMode), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SetAutoreload), (4 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SetClockDivision), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SetCompare1), (4 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SetCompare2), (4 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SetCompare3), (4 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SetCompare4), (4 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SetCounter), (4 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SetIC1Prescaler), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SetIC2Prescaler), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SetIC3Prescaler), (20 bytes).
    Removing stm32f0xx_tim.o(i.TIM_SetIC4Prescaler), (24 bytes).
    Removing stm32f0xx_tim.o(i.TIM_TIxExternalClockConfig), (58 bytes).
    Removing stm32f0xx_tim.o(i.TIM_TimeBaseStructInit), (18 bytes).
    Removing stm32f0xx_tim.o(i.TIM_UpdateDisableConfig), (28 bytes).
    Removing stm32f0xx_tim.o(i.TIM_UpdateRequestConfig), (28 bytes).
    Removing stm32f0xx_usart.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_usart.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_usart.o(i.USART_AddressDetectionConfig), (16 bytes).
    Removing stm32f0xx_usart.o(i.USART_AutoBaudRateCmd), (28 bytes).
    Removing stm32f0xx_usart.o(i.USART_AutoBaudRateConfig), (18 bytes).
    Removing stm32f0xx_usart.o(i.USART_ClearITPendingBit), (18 bytes).
    Removing stm32f0xx_usart.o(i.USART_ClockInit), (36 bytes).
    Removing stm32f0xx_usart.o(i.USART_ClockStructInit), (12 bytes).
    Removing stm32f0xx_usart.o(i.USART_DECmd), (28 bytes).
    Removing stm32f0xx_usart.o(i.USART_DEPolarityConfig), (18 bytes).
    Removing stm32f0xx_usart.o(i.USART_DMACmd), (20 bytes).
    Removing stm32f0xx_usart.o(i.USART_DMAReceptionErrorConfig), (18 bytes).
    Removing stm32f0xx_usart.o(i.USART_DataInvCmd), (28 bytes).
    Removing stm32f0xx_usart.o(i.USART_DeInit), (240 bytes).
    Removing stm32f0xx_usart.o(i.USART_DirectionModeCmd), (20 bytes).
    Removing stm32f0xx_usart.o(i.USART_GetFlagStatus), (20 bytes).
    Removing stm32f0xx_usart.o(i.USART_HalfDuplexCmd), (24 bytes).
    Removing stm32f0xx_usart.o(i.USART_InvPinCmd), (20 bytes).
    Removing stm32f0xx_usart.o(i.USART_IrDACmd), (24 bytes).
    Removing stm32f0xx_usart.o(i.USART_IrDAConfig), (16 bytes).
    Removing stm32f0xx_usart.o(i.USART_LINBreakDetectLengthConfig), (16 bytes).
    Removing stm32f0xx_usart.o(i.USART_LINCmd), (28 bytes).
    Removing stm32f0xx_usart.o(i.USART_MSBFirstCmd), (28 bytes).
    Removing stm32f0xx_usart.o(i.USART_MuteModeCmd), (28 bytes).
    Removing stm32f0xx_usart.o(i.USART_MuteModeWakeUpConfig), (18 bytes).
    Removing stm32f0xx_usart.o(i.USART_OneBitMethodCmd), (28 bytes).
    Removing stm32f0xx_usart.o(i.USART_OverSampling8Cmd), (28 bytes).
    Removing stm32f0xx_usart.o(i.USART_OverrunDetectionConfig), (18 bytes).
    Removing stm32f0xx_usart.o(i.USART_ReceiveData), (10 bytes).
    Removing stm32f0xx_usart.o(i.USART_ReceiverTimeOutCmd), (28 bytes).
    Removing stm32f0xx_usart.o(i.USART_RequestCmd), (20 bytes).
    Removing stm32f0xx_usart.o(i.USART_STOPModeCmd), (24 bytes).
    Removing stm32f0xx_usart.o(i.USART_SWAPPinCmd), (28 bytes).
    Removing stm32f0xx_usart.o(i.USART_SendData), (8 bytes).
    Removing stm32f0xx_usart.o(i.USART_SetAddress), (18 bytes).
    Removing stm32f0xx_usart.o(i.USART_SetAutoRetryCount), (20 bytes).
    Removing stm32f0xx_usart.o(i.USART_SetBlockLength), (18 bytes).
    Removing stm32f0xx_usart.o(i.USART_SetDEAssertionTime), (20 bytes).
    Removing stm32f0xx_usart.o(i.USART_SetDEDeassertionTime), (20 bytes).
    Removing stm32f0xx_usart.o(i.USART_SetGuardTime), (16 bytes).
    Removing stm32f0xx_usart.o(i.USART_SetPrescaler), (18 bytes).
    Removing stm32f0xx_usart.o(i.USART_SetReceiverTimeOut), (16 bytes).
    Removing stm32f0xx_usart.o(i.USART_SmartCardCmd), (24 bytes).
    Removing stm32f0xx_usart.o(i.USART_SmartCardNACKCmd), (24 bytes).
    Removing stm32f0xx_usart.o(i.USART_StopModeWakeUpSourceConfig), (18 bytes).
    Removing stm32f0xx_usart.o(i.USART_StructInit), (24 bytes).
    Removing stm32f0xx_wwdg.o(.rev16_text), (4 bytes).
    Removing stm32f0xx_wwdg.o(.revsh_text), (4 bytes).
    Removing stm32f0xx_wwdg.o(i.WWDG_ClearFlag), (12 bytes).
    Removing stm32f0xx_wwdg.o(i.WWDG_DeInit), (22 bytes).
    Removing stm32f0xx_wwdg.o(i.WWDG_Enable), (16 bytes).
    Removing stm32f0xx_wwdg.o(i.WWDG_EnableIT), (20 bytes).
    Removing stm32f0xx_wwdg.o(i.WWDG_GetFlagStatus), (24 bytes).
    Removing stm32f0xx_wwdg.o(i.WWDG_SetCounter), (16 bytes).
    Removing stm32f0xx_wwdg.o(i.WWDG_SetPrescaler), (32 bytes).
    Removing stm32f0xx_wwdg.o(i.WWDG_SetWindowValue), (40 bytes).
    Removing pmevent.o(.rev16_text), (4 bytes).
    Removing pmevent.o(.revsh_text), (4 bytes).
    Removing pmserial.o(.rev16_text), (4 bytes).
    Removing pmserial.o(.revsh_text), (4 bytes).
    Removing pmtimer.o(.rev16_text), (4 bytes).
    Removing pmtimer.o(.revsh_text), (4 bytes).
    Removing mbm.o(i.mbm_GetTxPDULength), (10 bytes).
    Removing mbm.o(i.uMBM_GetBuffer_8), (36 bytes).
    Removing mbm.o(i.uMBM_GetCurrentException), (12 bytes).
    Removing mbmutils.o(i.uMBM_Util_GetBits), (64 bytes).
    Removing mbmfunccoils.o(i.uMBM_Coils_MultiWrite), (190 bytes).
    Removing mbmfunccoils.o(i.uMBM_Coils_Read), (104 bytes).
    Removing mbmfunccoils.o(i.uMBM_Coils_SingleWrite), (124 bytes).
    Removing mbmfuncholding.o(i.uMBM_HoldingReg_MultiReadWrite), (192 bytes).
    Removing mbmfuncholding.o(i.uMBM_HoldingReg_MultiWrite), (158 bytes).
    Removing mbmfuncholding.o(i.uMBM_HoldingReg_Read), (104 bytes).
    Removing mbmfuncholding.o(i.uMBM_HoldingReg_SingleWrite), (104 bytes).
    Removing mbmfuncdisc.o(i.uMBM_DiscreteInput_Read), (104 bytes).
    Removing cmsis_os1.o(i.osMailAlloc), (26 bytes).
    Removing cmsis_os1.o(i.osMailCAlloc), (56 bytes).
    Removing cmsis_os1.o(i.osMailCreate), (94 bytes).
    Removing cmsis_os1.o(i.osMailFree), (36 bytes).
    Removing cmsis_os1.o(i.osMailGet), (88 bytes).
    Removing cmsis_os1.o(i.osMailPut), (40 bytes).
    Removing cmsis_os1.o(i.osMessageCreate), (24 bytes).
    Removing cmsis_os1.o(i.osMessageGet), (70 bytes).
    Removing cmsis_os1.o(i.osMessagePut), (20 bytes).
    Removing cmsis_os1.o(i.osMutexCreate), (18 bytes).
    Removing cmsis_os1.o(i.osPoolAlloc), (14 bytes).
    Removing cmsis_os1.o(i.osPoolCAlloc), (44 bytes).
    Removing cmsis_os1.o(i.osPoolCreate), (24 bytes).
    Removing cmsis_os1.o(i.osPoolFree), (16 bytes).
    Removing cmsis_os1.o(i.osSemaphoreCreate), (24 bytes).
    Removing cmsis_os1.o(i.osSemaphoreWait), (58 bytes).
    Removing cmsis_os1.o(i.osSignalClear), (46 bytes).
    Removing cmsis_os1.o(i.osSignalSet), (36 bytes).
    Removing cmsis_os1.o(i.osSignalWait), (112 bytes).
    Removing cmsis_os1.o(i.osThreadCreate), (24 bytes).
    Removing cmsis_os1.o(i.osTimerCreate), (28 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(.data), (4 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing startup_stm32f072.o(HEAP), (512 bytes).
    Removing system_stm32f0xx.o(.rev16_text), (4 bytes).
    Removing system_stm32f0xx.o(.revsh_text), (4 bytes).
    Removing system_stm32f0xx.o(i.SystemCoreClockUpdate), (176 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (60 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetState), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (124 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (220 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (104 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetState), (52 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (28 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.data.irqRtxLibRef), (4 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListRoot), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListSort), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (28 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadDelayInsert), (148 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadDelayRemove), (100 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadBlock), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (280 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (132 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (308 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (152 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (164 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (316 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (672 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (100 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (460 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (28 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (176 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (68 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osRtxTimerThread), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (232 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (164 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (26 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (116 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (56 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexNew), (120 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (24 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexAcquire), (164 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexRelease), (204 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (30 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexDelete), (216 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexNew), (56 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexAcquire), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexRelease), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexDelete), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_semaphore.o(.text), (0 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetName), (24 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetCount), (24 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreDelete), (120 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetName), (36 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetCount), (56 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreDelete), (36 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (74 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (564 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (174 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (28 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (164 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (140 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (60 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (24 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (24 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (24 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (24 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (28 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (378 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (140 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (56 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (60 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing irq_cm0.o(.constdata), (1 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerAckIRQ), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerSetup), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerEnable), (8 bytes).
    Removing rtx_system.o(.text.osRtxSysTimerDisable), (12 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerDisable), (8 bytes).
    Removing rtx_system.o(.text.osRtxSysTimerGetCount), (56 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetCount), (8 bytes).
    Removing rtx_system.o(.text.osRtxSysTimerGetFreq), (12 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetFreq), (8 bytes).

960 unused section(s) (total 35997 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../../../Source/rtx_delay.c              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    ../../../Source/rtx_kernel.c             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    ../../../Source/rtx_memory.c             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    ../../../Source/rtx_mempool.c            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    ../../../Source/rtx_msgqueue.c           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    ../../../Source/rtx_mutex.c              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    ../../../Source/rtx_semaphore.c          0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    ../../../Source/rtx_system.c             0x00000000   Number         0  rtx_system.o ABSOLUTE
    ../../../Source/rtx_thread.c             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    ../../../Source/rtx_timer.c              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    ../clib/../cmprslib/zerorunl2.c          0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm0.s            0x00000000   Number         0  irq_cm0.o ABSOLUTE
    F:\Programs\Development\keil5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Library\cmsis_os1.c 0x00000000   Number         0  cmsis_os1.o ABSOLUTE
    F:\Programs\Development\keil5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    F:\\Programs\\Development\\keil5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\STM32F072C8\startup_stm32f072.s 0x00000000   Number         0  startup_stm32f072.o ABSOLUTE
    RTE\Device\STM32F072C8\system_stm32f0xx.c 0x00000000   Number         0  system_stm32f0xx.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\Device\\STM32F072C8\\system_stm32f0xx.c 0x00000000   Number         0  system_stm32f0xx.o ABSOLUTE
    Source\Threads\th_Main.c                 0x00000000   Number         0  th_main.o ABSOLUTE
    Source\Threads\th_ModbusMaster.c         0x00000000   Number         0  th_modbusmaster.o ABSOLUTE
    Source\\Threads\\th_Main.c               0x00000000   Number         0  th_main.o ABSOLUTE
    Source\\Threads\\th_ModbusMaster.c       0x00000000   Number         0  th_modbusmaster.o ABSOLUTE
    Source\\modules\\uModbusMaster\\Port\\pmEvent.c 0x00000000   Number         0  pmevent.o ABSOLUTE
    Source\\modules\\uModbusMaster\\Port\\pmSerial.c 0x00000000   Number         0  pmserial.o ABSOLUTE
    Source\\modules\\uModbusMaster\\Port\\pmTimer.c 0x00000000   Number         0  pmtimer.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_adc.c     0x00000000   Number         0  stm32f0xx_adc.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_can.c     0x00000000   Number         0  stm32f0xx_can.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_cec.c     0x00000000   Number         0  stm32f0xx_cec.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_comp.c    0x00000000   Number         0  stm32f0xx_comp.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_crc.c     0x00000000   Number         0  stm32f0xx_crc.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_crs.c     0x00000000   Number         0  stm32f0xx_crs.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_dac.c     0x00000000   Number         0  stm32f0xx_dac.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_dbgmcu.c  0x00000000   Number         0  stm32f0xx_dbgmcu.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_dma.c     0x00000000   Number         0  stm32f0xx_dma.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_exti.c    0x00000000   Number         0  stm32f0xx_exti.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_flash.c   0x00000000   Number         0  stm32f0xx_flash.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_gpio.c    0x00000000   Number         0  stm32f0xx_gpio.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_i2c.c     0x00000000   Number         0  stm32f0xx_i2c.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_iwdg.c    0x00000000   Number         0  stm32f0xx_iwdg.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_misc.c    0x00000000   Number         0  stm32f0xx_misc.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_pwr.c     0x00000000   Number         0  stm32f0xx_pwr.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_rcc.c     0x00000000   Number         0  stm32f0xx_rcc.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_rtc.c     0x00000000   Number         0  stm32f0xx_rtc.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_spi.c     0x00000000   Number         0  stm32f0xx_spi.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_syscfg.c  0x00000000   Number         0  stm32f0xx_syscfg.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_tim.c     0x00000000   Number         0  stm32f0xx_tim.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_usart.c   0x00000000   Number         0  stm32f0xx_usart.o ABSOLUTE
    Source\\stdLib\\src\\stm32f0xx_wwdg.c    0x00000000   Number         0  stm32f0xx_wwdg.o ABSOLUTE
    Source\modules\uModbusMaster\Core\mbm.c  0x00000000   Number         0  mbm.o ABSOLUTE
    Source\modules\uModbusMaster\Core\mbmCRC16.c 0x00000000   Number         0  mbmcrc16.o ABSOLUTE
    Source\modules\uModbusMaster\Core\mbmFuncCoils.c 0x00000000   Number         0  mbmfunccoils.o ABSOLUTE
    Source\modules\uModbusMaster\Core\mbmFuncDisc.c 0x00000000   Number         0  mbmfuncdisc.o ABSOLUTE
    Source\modules\uModbusMaster\Core\mbmFuncHolding.c 0x00000000   Number         0  mbmfuncholding.o ABSOLUTE
    Source\modules\uModbusMaster\Core\mbmFuncInput.c 0x00000000   Number         0  mbmfuncinput.o ABSOLUTE
    Source\modules\uModbusMaster\Core\mbmUtils.c 0x00000000   Number         0  mbmutils.o ABSOLUTE
    Source\modules\uModbusMaster\Port\pmContext.c 0x00000000   Number         0  pmcontext.o ABSOLUTE
    Source\modules\uModbusMaster\Port\pmEvent.c 0x00000000   Number         0  pmevent.o ABSOLUTE
    Source\modules\uModbusMaster\Port\pmSerial.c 0x00000000   Number         0  pmserial.o ABSOLUTE
    Source\modules\uModbusMaster\Port\pmTimer.c 0x00000000   Number         0  pmtimer.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_adc.c        0x00000000   Number         0  stm32f0xx_adc.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_can.c        0x00000000   Number         0  stm32f0xx_can.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_cec.c        0x00000000   Number         0  stm32f0xx_cec.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_comp.c       0x00000000   Number         0  stm32f0xx_comp.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_crc.c        0x00000000   Number         0  stm32f0xx_crc.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_crs.c        0x00000000   Number         0  stm32f0xx_crs.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_dac.c        0x00000000   Number         0  stm32f0xx_dac.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_dbgmcu.c     0x00000000   Number         0  stm32f0xx_dbgmcu.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_dma.c        0x00000000   Number         0  stm32f0xx_dma.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_exti.c       0x00000000   Number         0  stm32f0xx_exti.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_flash.c      0x00000000   Number         0  stm32f0xx_flash.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_gpio.c       0x00000000   Number         0  stm32f0xx_gpio.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_i2c.c        0x00000000   Number         0  stm32f0xx_i2c.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_iwdg.c       0x00000000   Number         0  stm32f0xx_iwdg.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_misc.c       0x00000000   Number         0  stm32f0xx_misc.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_pwr.c        0x00000000   Number         0  stm32f0xx_pwr.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_rcc.c        0x00000000   Number         0  stm32f0xx_rcc.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_rtc.c        0x00000000   Number         0  stm32f0xx_rtc.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_spi.c        0x00000000   Number         0  stm32f0xx_spi.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_syscfg.c     0x00000000   Number         0  stm32f0xx_syscfg.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_tim.c        0x00000000   Number         0  stm32f0xx_tim.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_usart.c      0x00000000   Number         0  stm32f0xx_usart.o ABSOLUTE
    Source\stdLib\src\stm32f0xx_wwdg.c       0x00000000   Number         0  stm32f0xx_wwdg.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    RESET                                    0x08000000   Section      192  startup_stm32f072.o(RESET)
    .ARM.Collect$$$$00000000                 0x080000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x080000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x080000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x080000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x080000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x080000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000D                 0x080000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x080000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x080000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x080000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x080000d4   Section       88  startup_stm32f072.o(.text)
    .text                                    0x0800012c   Section      152  irq_cm0.o(.text)
    .text                                    0x080001c4   Section        0  uidiv.o(.text)
    .text                                    0x080001f0   Section        0  idiv.o(.text)
    .text                                    0x08000218   Section        0  memcpya.o(.text)
    .text                                    0x0800023c   Section        0  memseta.o(.text)
    .text                                    0x08000260   Section       36  init.o(.text)
    .text                                    0x08000284   Section        0  __dczerorl2.o(.text)
    [Anonymous Symbol]                       0x080002dc   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.2_0                             0x080002fc   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x08000300   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.13_0                            0x08000334   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x08000338   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.16_0                            0x0800036c   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x08000370   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.14_0                            0x0800044c   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x08000450   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    __arm_cp.11_0                            0x08000484   Number         4  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x08000488   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.13_0                            0x08000504   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x08000508   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x0800057e   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x080005c8   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x080005fe   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x08000634   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x08000672   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x080006b6   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x08000892   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x080008d8   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    __arm_cp.2_0                             0x08000974   Number         4  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x08000978   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.3_0                             0x080009e4   Number         4  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.3_1                             0x080009e8   Number         4  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x080009ec   Section        0  rtx_semaphore.o(.text.osRtxSemaphorePostProcess)
    [Anonymous Symbol]                       0x08000a2c   Section        0  rtx_system.o(.text.osRtxSysTimerAckIRQ)
    __arm_cp.1_0                             0x08000a34   Number         4  rtx_system.o(.text.osRtxSysTimerAckIRQ)
    [Anonymous Symbol]                       0x08000a38   Section        0  rtx_system.o(.text.osRtxSysTimerEnable)
    __arm_cp.5_0                             0x08000a40   Number         4  rtx_system.o(.text.osRtxSysTimerEnable)
    [Anonymous Symbol]                       0x08000a44   Section        0  rtx_system.o(.text.osRtxSysTimerSetup)
    __arm_cp.4_0                             0x08000a6c   Number         4  rtx_system.o(.text.osRtxSysTimerSetup)
    __arm_cp.4_1                             0x08000a70   Number         4  rtx_system.o(.text.osRtxSysTimerSetup)
    __arm_cp.4_2                             0x08000a74   Number         4  rtx_system.o(.text.osRtxSysTimerSetup)
    __arm_cp.4_3                             0x08000a78   Number         4  rtx_system.o(.text.osRtxSysTimerSetup)
    [Anonymous Symbol]                       0x08000a7c   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    __arm_cp.9_0                             0x08000af8   Number         4  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x08000afc   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    __arm_cp.14_0                            0x08000c24   Number         4  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x08000c28   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x08000c40   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x08000c78   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x08000c90   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    __arm_cp.17_0                            0x08000d94   Number         4  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08000d98   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.6_0                             0x08000ddc   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x08000de0   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x08000de8   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.13_0                            0x08000e0c   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.13_1                            0x08000e10   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x08000e14   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.12_0                            0x08000e24   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x08000e28   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.16_0                            0x08000f0c   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x08000f10   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    __arm_cp.15_0                            0x08000fb4   Number         4  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x08000fb8   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x0800102c   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x08001030   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.0_0                             0x080010d0   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x080010d4   Section        0  rtx_semaphore.o(.text.osSemaphoreAcquire)
    __arm_cp.9_0                             0x08001144   Number         4  rtx_semaphore.o(.text.osSemaphoreAcquire)
    [Anonymous Symbol]                       0x08001148   Section        0  rtx_semaphore.o(.text.osSemaphoreNew)
    __arm_cp.7_0                             0x0800117c   Number         4  rtx_semaphore.o(.text.osSemaphoreNew)
    [Anonymous Symbol]                       0x08001180   Section        0  rtx_semaphore.o(.text.osSemaphoreRelease)
    __arm_cp.10_0                            0x080011e0   Number         4  rtx_semaphore.o(.text.osSemaphoreRelease)
    [Anonymous Symbol]                       0x080011e4   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.19_0                            0x080011ec   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x080011f0   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.40_0                            0x08001224   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x08001228   Section        0  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x0800123c   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.0_0                             0x080013e4   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.0_1                             0x080013e8   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.0_2                             0x080013ec   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x080013f0   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.3_0                             0x0800146c   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.3_1                             0x08001470   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.3_2                             0x08001474   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.3_3                             0x08001478   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.3_4                             0x0800147c   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x08001480   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.4_0                             0x0800163c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x08001640   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_0                             0x080017f0   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_1                             0x080017f4   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_2                             0x080017f8   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_3                             0x080017fc   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_4                             0x08001800   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_5                             0x08001804   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x08001808   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.3_0                             0x08001938   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x0800193c   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    __arm_cp.3_0                             0x080019a8   Number         4  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    [Anonymous Symbol]                       0x080019ac   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    __arm_cp.1_0                             0x08001a2c   Number         4  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    __arm_cp.1_1                             0x08001a30   Number         4  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    __arm_cp.1_2                             0x08001a34   Number         4  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    [Anonymous Symbol]                       0x08001a38   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreRelease)
    [Anonymous Symbol]                       0x08001a90   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.32_0                            0x08001be0   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x08001be4   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.18_0                            0x08001e18   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.18_1                            0x08001e1c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.18_2                            0x08001e20   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.18_3                            0x08001e24   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.18_4                            0x08001e28   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    i.GPIO_Init                              0x08001e2c   Section        0  stm32f0xx_gpio.o(i.GPIO_Init)
    i.GPIO_PinAFConfig                       0x08001ebc   Section        0  stm32f0xx_gpio.o(i.GPIO_PinAFConfig)
    i.NVIC_Init                              0x08001f00   Section        0  stm32f0xx_misc.o(i.NVIC_Init)
    i.RCC_AHBPeriphClockCmd                  0x08001f70   Section        0  stm32f0xx_rcc.o(i.RCC_AHBPeriphClockCmd)
    i.RCC_APB2PeriphClockCmd                 0x08001f90   Section        0  stm32f0xx_rcc.o(i.RCC_APB2PeriphClockCmd)
    i.RCC_GetClocksFreq                      0x08001fb0   Section        0  stm32f0xx_rcc.o(i.RCC_GetClocksFreq)
    i.SetSysClock                            0x080021f8   Section        0  system_stm32f0xx.o(i.SetSysClock)
    SetSysClock                              0x080021f9   Thumb Code   118  system_stm32f0xx.o(i.SetSysClock)
    i.SystemInit                             0x08002278   Section        0  system_stm32f0xx.o(i.SystemInit)
    i.TIM15_IRQHandler                       0x080022f4   Section        0  pmtimer.o(i.TIM15_IRQHandler)
    i.TIM_ClearITPendingBit                  0x08002304   Section        0  stm32f0xx_tim.o(i.TIM_ClearITPendingBit)
    i.TIM_Cmd                                0x0800230c   Section        0  stm32f0xx_tim.o(i.TIM_Cmd)
    i.TIM_ITConfig                           0x08002328   Section        0  stm32f0xx_tim.o(i.TIM_ITConfig)
    i.TIM_TimeBaseInit                       0x0800233c   Section        0  stm32f0xx_tim.o(i.TIM_TimeBaseInit)
    i.USART1_IRQHandler                      0x080023b8   Section        0  pmserial.o(i.USART1_IRQHandler)
    i.USART_ClearFlag                        0x08002404   Section        0  stm32f0xx_usart.o(i.USART_ClearFlag)
    i.USART_Cmd                              0x08002408   Section        0  stm32f0xx_usart.o(i.USART_Cmd)
    i.USART_GetITStatus                      0x08002420   Section        0  stm32f0xx_usart.o(i.USART_GetITStatus)
    i.USART_ITConfig                         0x0800246e   Section        0  stm32f0xx_usart.o(i.USART_ITConfig)
    i.USART_Init                             0x080024b0   Section        0  stm32f0xx_usart.o(i.USART_Init)
    i.__ARM_common_switch8                   0x080025a8   Section        0  mbm.o(i.__ARM_common_switch8)
    i.__scatterload_copy                     0x080025c4   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x080025d2   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x080025d4   Section       14  handlers.o(i.__scatterload_zeroinit)
    i.main                                   0x080025e4   Section        0  th_main.o(i.main)
    i.mbm_CRC16Calc                          0x08002604   Section        0  mbmcrc16.o(i.mbm_CRC16Calc)
    i.mbm_Coils_Calllback                    0x0800263c   Section        0  mbmfunccoils.o(i.mbm_Coils_Calllback)
    i.mbm_Coils_MultiWrite_Func              0x08002708   Section        0  mbmfunccoils.o(i.mbm_Coils_MultiWrite_Func)
    i.mbm_Coils_Read_Func                    0x080027b2   Section        0  mbmfunccoils.o(i.mbm_Coils_Read_Func)
    i.mbm_Coils_SingleWrite_Func             0x08002862   Section        0  mbmfunccoils.o(i.mbm_Coils_SingleWrite_Func)
    i.mbm_DiscreteInput_Read_Calllback       0x080028ee   Section        0  mbmfuncdisc.o(i.mbm_DiscreteInput_Read_Calllback)
    i.mbm_DiscreteInput_Read_Func            0x080029aa   Section        0  mbmfuncdisc.o(i.mbm_DiscreteInput_Read_Func)
    i.mbm_FunctionExecute                    0x08002a58   Section        0  mbm.o(i.mbm_FunctionExecute)
    i.mbm_GetTxPDUBuffer                     0x08002ab4   Section        0  mbm.o(i.mbm_GetTxPDUBuffer)
    i.mbm_HoldingReg_Calllback               0x08002abc   Section        0  mbmfuncholding.o(i.mbm_HoldingReg_Calllback)
    i.mbm_HoldingReg_MultiReadWrite_Func     0x08002b48   Section        0  mbmfuncholding.o(i.mbm_HoldingReg_MultiReadWrite_Func)
    i.mbm_HoldingReg_MultiWrite_Func         0x08002c06   Section        0  mbmfuncholding.o(i.mbm_HoldingReg_MultiWrite_Func)
    i.mbm_HoldingReg_Read_Func               0x08002c8a   Section        0  mbmfuncholding.o(i.mbm_HoldingReg_Read_Func)
    i.mbm_HoldingReg_SingleWrite_Func        0x08002d12   Section        0  mbmfuncholding.o(i.mbm_HoldingReg_SingleWrite_Func)
    i.mbm_InputReg_Read_Calllback            0x08002d64   Section        0  mbmfuncinput.o(i.mbm_InputReg_Read_Calllback)
    i.mbm_InputReg_Read_Func                 0x08002db8   Section        0  mbmfuncinput.o(i.mbm_InputReg_Read_Func)
    i.mbm_RTUFrameProcess                    0x08002e3c   Section        0  mbm.o(i.mbm_RTUFrameProcess)
    i.mbm_RTURxProcess                       0x08002ea8   Section        0  mbm.o(i.mbm_RTURxProcess)
    i.mbm_RTUSendStartup                     0x08002f48   Section        0  mbm.o(i.mbm_RTUSendStartup)
    i.mbm_RTUTimerExpired                    0x08002fea   Section        0  mbm.o(i.mbm_RTUTimerExpired)
    i.mbm_RTUTxProcess                       0x08003066   Section        0  mbm.o(i.mbm_RTUTxProcess)
    i.mbm_SetTxPDULength                     0x080030de   Section        0  mbm.o(i.mbm_SetTxPDULength)
    i.modbusMaster_Thread                    0x080030e8   Section        0  th_modbusmaster.o(i.modbusMaster_Thread)
    i.modbusMaster_ThreadStart               0x08003114   Section        0  th_modbusmaster.o(i.modbusMaster_ThreadStart)
    i.osRtxErrorNotify                       0x08003130   Section        0  rtx_config.o(i.osRtxErrorNotify)
    i.osRtxIdleThread                        0x08003150   Section        0  rtx_config.o(i.osRtxIdleThread)
    i.pMBM_EventGet                          0x08003154   Section        0  pmevent.o(i.pMBM_EventGet)
    i.pMBM_EventInit                         0x08003170   Section        0  pmevent.o(i.pMBM_EventInit)
    i.pMBM_EventPost                         0x0800319c   Section        0  pmevent.o(i.pMBM_EventPost)
    i.pMBM_RespondTimerEnable                0x080031b4   Section        0  pmtimer.o(i.pMBM_RespondTimerEnable)
    i.pMBM_SemaphoreInit                     0x080031d8   Section        0  pmevent.o(i.pMBM_SemaphoreInit)
    i.pMBM_SemaphoreRelease                  0x080031f0   Section        0  pmevent.o(i.pMBM_SemaphoreRelease)
    i.pMBM_SemaphoreWait                     0x08003200   Section        0  pmevent.o(i.pMBM_SemaphoreWait)
    i.pMBM_SerialDisable                     0x08003220   Section        0  pmserial.o(i.pMBM_SerialDisable)
    i.pMBM_SerialEnable                      0x08003224   Section        0  pmserial.o(i.pMBM_SerialEnable)
    i.pMBM_SerialInit                        0x0800326c   Section        0  pmserial.o(i.pMBM_SerialInit)
    i.pMBM_SerialRXNE_ISR                    0x08003318   Section        0  mbm.o(i.pMBM_SerialRXNE_ISR)
    i.pMBM_SerialReadByte                    0x08003324   Section        0  pmserial.o(i.pMBM_SerialReadByte)
    i.pMBM_SerialSendByte                    0x08003330   Section        0  pmserial.o(i.pMBM_SerialSendByte)
    i.pMBM_SerialTC_ISR                      0x0800333c   Section        0  mbm.o(i.pMBM_SerialTC_ISR)
    i.pMBM_T35TimerEnable                    0x08003348   Section        0  pmtimer.o(i.pMBM_T35TimerEnable)
    i.pMBM_TimerDisable                      0x08003368   Section        0  pmtimer.o(i.pMBM_TimerDisable)
    i.pMBM_TimerInit                         0x08003388   Section        0  pmtimer.o(i.pMBM_TimerInit)
    i.pMBM_Timer_ISR                         0x080033f8   Section        0  mbm.o(i.pMBM_Timer_ISR)
    i.pMBM_UserEventGet                      0x08003404   Section        0  pmevent.o(i.pMBM_UserEventGet)
    i.pMBM_UserEventPost                     0x08003420   Section        0  pmevent.o(i.pMBM_UserEventPost)
    i.th_Main                                0x08003438   Section        0  th_main.o(i.th_Main)
    i.uMBM_CoreInit                          0x08003484   Section        0  mbm.o(i.uMBM_CoreInit)
    i.uMBM_Disable                           0x08003520   Section        0  mbm.o(i.uMBM_Disable)
    i.uMBM_Enable                            0x0800358c   Section        0  mbm.o(i.uMBM_Enable)
    i.uMBM_GetBuffer_16                      0x080035a2   Section        0  mbm.o(i.uMBM_GetBuffer_16)
    i.uMBM_InputReg_Read                     0x080035c6   Section        0  mbmfuncinput.o(i.uMBM_InputReg_Read)
    i.uMBM_Poll                              0x0800362e   Section        0  mbm.o(i.uMBM_Poll)
    i.uMBM_UserEvent2ErrorCode               0x08003700   Section        0  mbm.o(i.uMBM_UserEvent2ErrorCode)
    i.uMBM_Util_SetBits                      0x08003728   Section        0  mbmutils.o(i.uMBM_Util_SetBits)
    .constdata                               0x08003788   Section       32  pmevent.o(.constdata)
    .constdata                               0x080037a8   Section      128  mbm.o(.constdata)
    mbm_FunctionsHandlers                    0x080037a8   Data         128  mbm.o(.constdata)
    .constdata                               0x08003828   Section      512  mbmcrc16.o(.constdata)
    CRC16_HI                                 0x08003828   Data         256  mbmcrc16.o(.constdata)
    CRC16_LO                                 0x08003928   Data         256  mbmcrc16.o(.constdata)
    .constdata                               0x08003a28   Section      100  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x08003a28   Data          36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x08003a4c   Data          36  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x08003a70   Data          24  rtx_lib.o(.constdata)
    .rodata                                  0x08003a8c   Section      104  rtx_lib.o(.rodata)
    __tagsym$$used                           0x08003a8c   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x08003af4   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str                                   0x08003af4   Data          11  rtx_kernel.o(.rodata.str1.4)
    .bss.os                                  0x20000000   Section     4160  rtx_lib.o(.bss.os)
    os_mem                                   0x20000000   Data        4096  rtx_lib.o(.bss.os)
    os_isr_queue                             0x20001000   Data          64  rtx_lib.o(.bss.os)
    .bss.os.msgqueue.cb                      0x20001040   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x20001040   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x20001074   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x20001074   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x200010c4   Section      136  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x200010c4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20001108   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x20001150   Section      400  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x20001150   Data         200  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x20001218   Data         200  rtx_lib.o(.bss.os.thread.stack)
    .data                                    0x200012e0   Section        2  th_main.o(.data)
    .data                                    0x200012e4   Section        4  th_modbusmaster.o(.data)
    .data                                    0x200012e8   Section       16  stm32f0xx_rcc.o(.data)
    APBAHBPrescTable                         0x200012e8   Data          16  stm32f0xx_rcc.o(.data)
    .data                                    0x200012f8   Section       12  pmevent.o(.data)
    .data                                    0x20001304   Section       28  pmserial.o(.data)
    .data                                    0x20001320   Section       24  pmtimer.o(.data)
    .data                                    0x20001338   Section       20  system_stm32f0xx.o(.data)
    .bss                                     0x200013f8   Section       20  th_main.o(.bss)
    .bss                                     0x2000140c   Section      604  th_modbusmaster.o(.bss)
    STACK                                    0x20001668   Section     1024  startup_stm32f072.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  th_main.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_Size                           0x000000c0   Number         0  startup_stm32f072.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f072.o(RESET)
    __Vectors_End                            0x080000c0   Data           0  startup_stm32f072.o(RESET)
    __main                                   0x080000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x080000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x080000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x080000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x080000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x080000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x080000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x080000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x080000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x080000d5   Thumb Code    38  startup_stm32f072.o(.text)
    NMI_Handler                              0x080000fb   Thumb Code     2  startup_stm32f072.o(.text)
    HardFault_Handler                        0x080000fd   Thumb Code     2  startup_stm32f072.o(.text)
    ADC1_COMP_IRQHandler                     0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    CEC_CAN_IRQHandler                       0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    DMA1_Channel1_IRQHandler                 0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    DMA1_Channel2_3_IRQHandler               0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    DMA1_Channel4_5_6_7_IRQHandler           0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    EXTI0_1_IRQHandler                       0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    EXTI2_3_IRQHandler                       0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    EXTI4_15_IRQHandler                      0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    FLASH_IRQHandler                         0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    I2C1_IRQHandler                          0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    I2C2_IRQHandler                          0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    PVD_VDDIO2_IRQHandler                    0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    RCC_CRS_IRQHandler                       0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    RTC_IRQHandler                           0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    SPI1_IRQHandler                          0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    SPI2_IRQHandler                          0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    TIM14_IRQHandler                         0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    TIM16_IRQHandler                         0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    TIM17_IRQHandler                         0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    TIM1_BRK_UP_TRG_COM_IRQHandler           0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    TIM1_CC_IRQHandler                       0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    TIM2_IRQHandler                          0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    TIM3_IRQHandler                          0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    TIM6_DAC_IRQHandler                      0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    TIM7_IRQHandler                          0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    TSC_IRQHandler                           0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    USART2_IRQHandler                        0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    USART3_4_IRQHandler                      0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    USB_IRQHandler                           0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    WWDG_IRQHandler                          0x08000105   Thumb Code     0  startup_stm32f072.o(.text)
    SVC_Handler                              0x0800012d   Thumb Code   120  irq_cm0.o(.text)
    PendSV_Handler                           0x080001a5   Thumb Code    12  irq_cm0.o(.text)
    SysTick_Handler                          0x080001b1   Thumb Code    12  irq_cm0.o(.text)
    __aeabi_uidiv                            0x080001c5   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x080001c5   Thumb Code    44  uidiv.o(.text)
    __aeabi_idiv                             0x080001f1   Thumb Code     0  idiv.o(.text)
    __aeabi_idivmod                          0x080001f1   Thumb Code    40  idiv.o(.text)
    __aeabi_memcpy                           0x08000219   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x08000219   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x08000219   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x0800023d   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x0800023d   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x0800023d   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x0800024b   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x0800024b   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x0800024b   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x0800024f   Thumb Code    18  memseta.o(.text)
    __scatterload                            0x08000261   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x08000261   Thumb Code     0  init.o(.text)
    __decompress                             0x08000285   Thumb Code     0  __dczerorl2.o(.text)
    __decompress1                            0x08000285   Thumb Code    86  __dczerorl2.o(.text)
    osDelay                                  0x080002dd   Thumb Code    36  rtx_delay.o(.text.osDelay)
    osKernelInitialize                       0x08000301   Thumb Code    56  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x08000339   Thumb Code    56  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x08000371   Thumb Code   224  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueNew                        0x08000451   Thumb Code    56  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x08000489   Thumb Code   128  rtx_msgqueue.o(.text.osMessageQueuePut)
    osRtxMemoryAlloc                         0x08000509   Thumb Code   118  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x0800057f   Thumb Code    74  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x080005c9   Thumb Code    54  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x080005ff   Thumb Code    54  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x08000635   Thumb Code    62  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x08000673   Thumb Code    68  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueuePostProcess             0x080006b7   Thumb Code   476  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    osRtxMutexOwnerRelease                   0x08000893   Thumb Code    70  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxPendSV_Handler                      0x080008d9   Thumb Code   160  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x08000979   Thumb Code   116  rtx_system.o(.text.osRtxPostProcess)
    osRtxSemaphorePostProcess                0x080009ed   Thumb Code    62  rtx_semaphore.o(.text.osRtxSemaphorePostProcess)
    osRtxSysTimerAckIRQ                      0x08000a2d   Thumb Code    12  rtx_system.o(.text.osRtxSysTimerAckIRQ)
    osRtxSysTimerEnable                      0x08000a39   Thumb Code    12  rtx_system.o(.text.osRtxSysTimerEnable)
    osRtxSysTimerSetup                       0x08000a45   Thumb Code    56  rtx_system.o(.text.osRtxSysTimerSetup)
    osRtxThreadDelayTick                     0x08000a7d   Thumb Code   128  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x08000afd   Thumb Code   300  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x08000c29   Thumb Code    24  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x08000c41   Thumb Code    56  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x08000c79   Thumb Code    24  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadPostProcess                   0x08000c91   Thumb Code   264  rtx_thread.o(.text.osRtxThreadPostProcess)
    osRtxThreadReadyPut                      0x08000d99   Thumb Code    72  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x08000de1   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x08000de9   Thumb Code    44  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadSwitch                        0x08000e15   Thumb Code    20  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x08000e29   Thumb Code   232  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x08000f11   Thumb Code   168  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x08000fb9   Thumb Code   120  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerTick                           0x08001031   Thumb Code   164  rtx_timer.o(.text.osRtxTimerTick)
    osSemaphoreAcquire                       0x080010d5   Thumb Code   116  rtx_semaphore.o(.text.osSemaphoreAcquire)
    osSemaphoreNew                           0x08001149   Thumb Code    56  rtx_semaphore.o(.text.osSemaphoreNew)
    osSemaphoreRelease                       0x08001181   Thumb Code   100  rtx_semaphore.o(.text.osSemaphoreRelease)
    osThreadExit                             0x080011e5   Thumb Code    12  rtx_thread.o(.text.osThreadExit)
    osThreadNew                              0x080011f1   Thumb Code    56  rtx_thread.o(.text.osThreadNew)
    svcRtxDelay                              0x08001229   Thumb Code    18  rtx_delay.o(.text.svcRtxDelay)
    svcRtxKernelInitialize                   0x0800123d   Thumb Code   436  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x080013f1   Thumb Code   144  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueueGet                    0x08001481   Thumb Code   448  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x08001641   Thumb Code   456  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x08001809   Thumb Code   308  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxSemaphoreAcquire                   0x0800193d   Thumb Code   112  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    svcRtxSemaphoreNew                       0x080019ad   Thumb Code   140  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    svcRtxSemaphoreRelease                   0x08001a39   Thumb Code    88  rtx_semaphore.o(.text.svcRtxSemaphoreRelease)
    svcRtxThreadExit                         0x08001a91   Thumb Code   340  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadNew                          0x08001be5   Thumb Code   584  rtx_thread.o(.text.svcRtxThreadNew)
    GPIO_Init                                0x08001e2d   Thumb Code   144  stm32f0xx_gpio.o(i.GPIO_Init)
    GPIO_PinAFConfig                         0x08001ebd   Thumb Code    68  stm32f0xx_gpio.o(i.GPIO_PinAFConfig)
    NVIC_Init                                0x08001f01   Thumb Code   106  stm32f0xx_misc.o(i.NVIC_Init)
    RCC_AHBPeriphClockCmd                    0x08001f71   Thumb Code    28  stm32f0xx_rcc.o(i.RCC_AHBPeriphClockCmd)
    RCC_APB2PeriphClockCmd                   0x08001f91   Thumb Code    28  stm32f0xx_rcc.o(i.RCC_APB2PeriphClockCmd)
    RCC_GetClocksFreq                        0x08001fb1   Thumb Code   554  stm32f0xx_rcc.o(i.RCC_GetClocksFreq)
    SystemInit                               0x08002279   Thumb Code   110  system_stm32f0xx.o(i.SystemInit)
    TIM15_IRQHandler                         0x080022f5   Thumb Code    10  pmtimer.o(i.TIM15_IRQHandler)
    TIM_ClearITPendingBit                    0x08002305   Thumb Code     6  stm32f0xx_tim.o(i.TIM_ClearITPendingBit)
    TIM_Cmd                                  0x0800230d   Thumb Code    24  stm32f0xx_tim.o(i.TIM_Cmd)
    TIM_ITConfig                             0x08002329   Thumb Code    20  stm32f0xx_tim.o(i.TIM_ITConfig)
    TIM_TimeBaseInit                         0x0800233d   Thumb Code    90  stm32f0xx_tim.o(i.TIM_TimeBaseInit)
    USART1_IRQHandler                        0x080023b9   Thumb Code    60  pmserial.o(i.USART1_IRQHandler)
    USART_ClearFlag                          0x08002405   Thumb Code     4  stm32f0xx_usart.o(i.USART_ClearFlag)
    USART_Cmd                                0x08002409   Thumb Code    24  stm32f0xx_usart.o(i.USART_Cmd)
    USART_GetITStatus                        0x08002421   Thumb Code    78  stm32f0xx_usart.o(i.USART_GetITStatus)
    USART_ITConfig                           0x0800246f   Thumb Code    66  stm32f0xx_usart.o(i.USART_ITConfig)
    USART_Init                               0x080024b1   Thumb Code   226  stm32f0xx_usart.o(i.USART_Init)
    __ARM_common_switch8                     0x080025a9   Thumb Code    28  mbm.o(i.__ARM_common_switch8)
    __scatterload_copy                       0x080025c5   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x080025d3   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x080025d5   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    main                                     0x080025e5   Thumb Code    26  th_main.o(i.main)
    mbm_CRC16Calc                            0x08002605   Thumb Code    46  mbmcrc16.o(i.mbm_CRC16Calc)
    mbm_Coils_Calllback                      0x0800263d   Thumb Code   204  mbmfunccoils.o(i.mbm_Coils_Calllback)
    mbm_Coils_MultiWrite_Func                0x08002709   Thumb Code   170  mbmfunccoils.o(i.mbm_Coils_MultiWrite_Func)
    mbm_Coils_Read_Func                      0x080027b3   Thumb Code   176  mbmfunccoils.o(i.mbm_Coils_Read_Func)
    mbm_Coils_SingleWrite_Func               0x08002863   Thumb Code   140  mbmfunccoils.o(i.mbm_Coils_SingleWrite_Func)
    mbm_DiscreteInput_Read_Calllback         0x080028ef   Thumb Code   188  mbmfuncdisc.o(i.mbm_DiscreteInput_Read_Calllback)
    mbm_DiscreteInput_Read_Func              0x080029ab   Thumb Code   172  mbmfuncdisc.o(i.mbm_DiscreteInput_Read_Func)
    mbm_FunctionExecute                      0x08002a59   Thumb Code    86  mbm.o(i.mbm_FunctionExecute)
    mbm_GetTxPDUBuffer                       0x08002ab5   Thumb Code     8  mbm.o(i.mbm_GetTxPDUBuffer)
    mbm_HoldingReg_Calllback                 0x08002abd   Thumb Code   140  mbmfuncholding.o(i.mbm_HoldingReg_Calllback)
    mbm_HoldingReg_MultiReadWrite_Func       0x08002b49   Thumb Code   190  mbmfuncholding.o(i.mbm_HoldingReg_MultiReadWrite_Func)
    mbm_HoldingReg_MultiWrite_Func           0x08002c07   Thumb Code   132  mbmfuncholding.o(i.mbm_HoldingReg_MultiWrite_Func)
    mbm_HoldingReg_Read_Func                 0x08002c8b   Thumb Code   136  mbmfuncholding.o(i.mbm_HoldingReg_Read_Func)
    mbm_HoldingReg_SingleWrite_Func          0x08002d13   Thumb Code    82  mbmfuncholding.o(i.mbm_HoldingReg_SingleWrite_Func)
    mbm_InputReg_Read_Calllback              0x08002d65   Thumb Code    84  mbmfuncinput.o(i.mbm_InputReg_Read_Calllback)
    mbm_InputReg_Read_Func                   0x08002db9   Thumb Code   132  mbmfuncinput.o(i.mbm_InputReg_Read_Func)
    mbm_RTUFrameProcess                      0x08002e3d   Thumb Code   104  mbm.o(i.mbm_RTUFrameProcess)
    mbm_RTURxProcess                         0x08002ea9   Thumb Code   154  mbm.o(i.mbm_RTURxProcess)
    mbm_RTUSendStartup                       0x08002f49   Thumb Code   162  mbm.o(i.mbm_RTUSendStartup)
    mbm_RTUTimerExpired                      0x08002feb   Thumb Code   124  mbm.o(i.mbm_RTUTimerExpired)
    mbm_RTUTxProcess                         0x08003067   Thumb Code   120  mbm.o(i.mbm_RTUTxProcess)
    mbm_SetTxPDULength                       0x080030df   Thumb Code     8  mbm.o(i.mbm_SetTxPDULength)
    modbusMaster_Thread                      0x080030e9   Thumb Code    28  th_modbusmaster.o(i.modbusMaster_Thread)
    modbusMaster_ThreadStart                 0x08003115   Thumb Code    18  th_modbusmaster.o(i.modbusMaster_ThreadStart)
    osRtxErrorNotify                         0x08003131   Thumb Code    32  rtx_config.o(i.osRtxErrorNotify)
    osRtxIdleThread                          0x08003151   Thumb Code     4  rtx_config.o(i.osRtxIdleThread)
    pMBM_EventGet                            0x08003155   Thumb Code    24  pmevent.o(i.pMBM_EventGet)
    pMBM_EventInit                           0x08003171   Thumb Code    34  pmevent.o(i.pMBM_EventInit)
    pMBM_EventPost                           0x0800319d   Thumb Code    18  pmevent.o(i.pMBM_EventPost)
    pMBM_RespondTimerEnable                  0x080031b5   Thumb Code    26  pmtimer.o(i.pMBM_RespondTimerEnable)
    pMBM_SemaphoreInit                       0x080031d9   Thumb Code    20  pmevent.o(i.pMBM_SemaphoreInit)
    pMBM_SemaphoreRelease                    0x080031f1   Thumb Code    12  pmevent.o(i.pMBM_SemaphoreRelease)
    pMBM_SemaphoreWait                       0x08003201   Thumb Code    28  pmevent.o(i.pMBM_SemaphoreWait)
    pMBM_SerialDisable                       0x08003221   Thumb Code     2  pmserial.o(i.pMBM_SerialDisable)
    pMBM_SerialEnable                        0x08003225   Thumb Code    60  pmserial.o(i.pMBM_SerialEnable)
    pMBM_SerialInit                          0x0800326d   Thumb Code   162  pmserial.o(i.pMBM_SerialInit)
    pMBM_SerialRXNE_ISR                      0x08003319   Thumb Code    12  mbm.o(i.pMBM_SerialRXNE_ISR)
    pMBM_SerialReadByte                      0x08003325   Thumb Code     8  pmserial.o(i.pMBM_SerialReadByte)
    pMBM_SerialSendByte                      0x08003331   Thumb Code     6  pmserial.o(i.pMBM_SerialSendByte)
    pMBM_SerialTC_ISR                        0x0800333d   Thumb Code    12  mbm.o(i.pMBM_SerialTC_ISR)
    pMBM_T35TimerEnable                      0x08003349   Thumb Code    22  pmtimer.o(i.pMBM_T35TimerEnable)
    pMBM_TimerDisable                        0x08003369   Thumb Code    28  pmtimer.o(i.pMBM_TimerDisable)
    pMBM_TimerInit                           0x08003389   Thumb Code   100  pmtimer.o(i.pMBM_TimerInit)
    pMBM_Timer_ISR                           0x080033f9   Thumb Code    12  mbm.o(i.pMBM_Timer_ISR)
    pMBM_UserEventGet                        0x08003405   Thumb Code    24  pmevent.o(i.pMBM_UserEventGet)
    pMBM_UserEventPost                       0x08003421   Thumb Code    18  pmevent.o(i.pMBM_UserEventPost)
    th_Main                                  0x08003439   Thumb Code    64  th_main.o(i.th_Main)
    uMBM_CoreInit                            0x08003485   Thumb Code   152  mbm.o(i.uMBM_CoreInit)
    uMBM_Disable                             0x08003521   Thumb Code   102  mbm.o(i.uMBM_Disable)
    uMBM_Enable                              0x0800358d   Thumb Code    22  mbm.o(i.uMBM_Enable)
    uMBM_GetBuffer_16                        0x080035a3   Thumb Code    36  mbm.o(i.uMBM_GetBuffer_16)
    uMBM_InputReg_Read                       0x080035c7   Thumb Code   104  mbmfuncinput.o(i.uMBM_InputReg_Read)
    uMBM_Poll                                0x0800362f   Thumb Code   210  mbm.o(i.uMBM_Poll)
    uMBM_UserEvent2ErrorCode                 0x08003701   Thumb Code    40  mbm.o(i.uMBM_UserEvent2ErrorCode)
    uMBM_Util_SetBits                        0x08003729   Thumb Code    96  mbmutils.o(i.uMBM_Util_SetBits)
    mbm_Event                                0x08003788   Data          32  pmevent.o(.constdata)
    osRtxUserSVC                             0x08003a88   Data           4  rtx_lib.o(.constdata)
    osRtxConfig                              0x08003a8c   Data         104  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x08003b00   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08003b20   Number         0  anon$$obj.o(Region$$Table)
    rcvLength                                0x200012e0   Data           2  th_main.o(.data)
    modbusMaster_ThreadID                    0x200012e4   Data           4  th_modbusmaster.o(.data)
    mbm_CoreMsg_ID                           0x200012f8   Data           4  pmevent.o(.data)
    mbm_Sem_ID                               0x200012fc   Data           4  pmevent.o(.data)
    mbm_UserMsg_ID                           0x20001300   Data           4  pmevent.o(.data)
    mbm_Serial                               0x20001304   Data          28  pmserial.o(.data)
    mbm_Timer                                0x20001320   Data          24  pmtimer.o(.data)
    SystemCoreClock                          0x20001338   Data           4  system_stm32f0xx.o(.data)
    AHBPrescTable                            0x2000133c   Data          16  system_stm32f0xx.o(.data)
    osRtxInfo                                0x20001350   Data         168  rtx_kernel.o(.data.os)
    rcvInputReg                              0x200013f8   Data          20  th_main.o(.bss)
    mbm_SensorHub_0                          0x2000140c   Data         604  th_modbusmaster.o(.bss)
    __initial_sp                             0x20001a68   Data           0  startup_stm32f072.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000c1

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00004f18, Max: 0x00010000, ABSOLUTE, COMPRESSED[0x00003b88])

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00003b20, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000c0   Data   RO         4519    RESET               startup_stm32f072.o
    0x080000c0   0x080000c0   0x00000000   Code   RO         5049  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x080000c0   0x080000c0   0x00000004   Code   RO         5062    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x080000c4   0x080000c4   0x00000004   Code   RO         5065    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x080000c8   0x080000c8   0x00000000   Code   RO         5067    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x080000c8   0x080000c8   0x00000000   Code   RO         5069    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x080000c8   0x080000c8   0x00000008   Code   RO         5070    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x080000d0   0x080000d0   0x00000000   Code   RO         5072    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x080000d0   0x080000d0   0x00000000   Code   RO         5074    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x080000d0   0x080000d0   0x00000004   Code   RO         5063    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x080000d4   0x080000d4   0x00000058   Code   RO         4520    .text               startup_stm32f072.o
    0x0800012c   0x0800012c   0x00000098   Code   RO         4999    .text               RTX_CM0.lib(irq_cm0.o)
    0x080001c4   0x080001c4   0x0000002c   Code   RO         5052    .text               mc_p.l(uidiv.o)
    0x080001f0   0x080001f0   0x00000028   Code   RO         5054    .text               mc_p.l(idiv.o)
    0x08000218   0x08000218   0x00000024   Code   RO         5056    .text               mc_p.l(memcpya.o)
    0x0800023c   0x0800023c   0x00000024   Code   RO         5058    .text               mc_p.l(memseta.o)
    0x08000260   0x08000260   0x00000024   Code   RO         5076    .text               mc_p.l(init.o)
    0x08000284   0x08000284   0x00000056   Code   RO         5086    .text               mc_p.l(__dczerorl2.o)
    0x080002da   0x080002da   0x00000002   PAD
    0x080002dc   0x080002dc   0x00000024   Code   RO         4763    .text.osDelay       RTX_CM0.lib(rtx_delay.o)
    0x08000300   0x08000300   0x00000038   Code   RO         4588    .text.osKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x08000338   0x08000338   0x00000038   Code   RO         4594    .text.osKernelStart  RTX_CM0.lib(rtx_kernel.o)
    0x08000370   0x08000370   0x000000e0   Code   RO         4974    .text.osMessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x08000450   0x08000450   0x00000038   Code   RO         4968    .text.osMessageQueueNew  RTX_CM0.lib(rtx_msgqueue.o)
    0x08000488   0x08000488   0x00000080   Code   RO         4972    .text.osMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x08000508   0x08000508   0x00000076   Code   RO         5006    .text.osRtxMemoryAlloc  RTX_CM0.lib(rtx_memory.o)
    0x0800057e   0x0800057e   0x0000004a   Code   RO         5008    .text.osRtxMemoryFree  RTX_CM0.lib(rtx_memory.o)
    0x080005c8   0x080005c8   0x00000036   Code   RO         5004    .text.osRtxMemoryInit  RTX_CM0.lib(rtx_memory.o)
    0x080005fe   0x080005fe   0x00000036   Code   RO         4893    .text.osRtxMemoryPoolAlloc  RTX_CM0.lib(rtx_mempool.o)
    0x08000634   0x08000634   0x0000003e   Code   RO         4895    .text.osRtxMemoryPoolFree  RTX_CM0.lib(rtx_mempool.o)
    0x08000672   0x08000672   0x00000044   Code   RO         4891    .text.osRtxMemoryPoolInit  RTX_CM0.lib(rtx_mempool.o)
    0x080006b6   0x080006b6   0x000001dc   Code   RO         4946    .text.osRtxMessageQueuePostProcess  RTX_CM0.lib(rtx_msgqueue.o)
    0x08000892   0x08000892   0x00000046   Code   RO         4817    .text.osRtxMutexOwnerRelease  RTX_CM0.lib(rtx_mutex.o)
    0x080008d8   0x080008d8   0x000000a0   Code   RO         5025    .text.osRtxPendSV_Handler  RTX_CM0.lib(rtx_system.o)
    0x08000978   0x08000978   0x00000074   Code   RO         5027    .text.osRtxPostProcess  RTX_CM0.lib(rtx_system.o)
    0x080009ec   0x080009ec   0x0000003e   Code   RO         4854    .text.osRtxSemaphorePostProcess  RTX_CM0.lib(rtx_semaphore.o)
    0x08000a2a   0x08000a2a   0x00000002   PAD
    0x08000a2c   0x08000a2c   0x0000000c   Code   RO         5023    .text.osRtxSysTimerAckIRQ  RTX_CM0.lib(rtx_system.o)
    0x08000a38   0x08000a38   0x0000000c   Code   RO         5031    .text.osRtxSysTimerEnable  RTX_CM0.lib(rtx_system.o)
    0x08000a44   0x08000a44   0x00000038   Code   RO         5029    .text.osRtxSysTimerSetup  RTX_CM0.lib(rtx_system.o)
    0x08000a7c   0x08000a7c   0x00000080   Code   RO         4646    .text.osRtxThreadDelayTick  RTX_CM0.lib(rtx_thread.o)
    0x08000afc   0x08000afc   0x0000012c   Code   RO         4656    .text.osRtxThreadDispatch  RTX_CM0.lib(rtx_thread.o)
    0x08000c28   0x08000c28   0x00000018   Code   RO         4630    .text.osRtxThreadListGet  RTX_CM0.lib(rtx_thread.o)
    0x08000c40   0x08000c40   0x00000038   Code   RO         4628    .text.osRtxThreadListPut  RTX_CM0.lib(rtx_thread.o)
    0x08000c78   0x08000c78   0x00000018   Code   RO         4636    .text.osRtxThreadListRemove  RTX_CM0.lib(rtx_thread.o)
    0x08000c90   0x08000c90   0x00000108   Code   RO         4662    .text.osRtxThreadPostProcess  RTX_CM0.lib(rtx_thread.o)
    0x08000d98   0x08000d98   0x00000048   Code   RO         4640    .text.osRtxThreadReadyPut  RTX_CM0.lib(rtx_thread.o)
    0x08000de0   0x08000de0   0x00000006   Code   RO         4648    .text.osRtxThreadRegPtr  RTX_CM0.lib(rtx_thread.o)
    0x08000de6   0x08000de6   0x00000002   PAD
    0x08000de8   0x08000de8   0x0000002c   Code   RO         4654    .text.osRtxThreadStackCheck  RTX_CM0.lib(rtx_thread.o)
    0x08000e14   0x08000e14   0x00000014   Code   RO         4652    .text.osRtxThreadSwitch  RTX_CM0.lib(rtx_thread.o)
    0x08000e28   0x08000e28   0x000000e8   Code   RO         4660    .text.osRtxThreadWaitEnter  RTX_CM0.lib(rtx_thread.o)
    0x08000f10   0x08000f10   0x000000a8   Code   RO         4658    .text.osRtxThreadWaitExit  RTX_CM0.lib(rtx_thread.o)
    0x08000fb8   0x08000fb8   0x00000078   Code   RO         5021    .text.osRtxTick_Handler  RTX_CM0.lib(rtx_system.o)
    0x08001030   0x08001030   0x000000a4   Code   RO         4778    .text.osRtxTimerTick  RTX_CM0.lib(rtx_timer.o)
    0x080010d4   0x080010d4   0x00000074   Code   RO         4872    .text.osSemaphoreAcquire  RTX_CM0.lib(rtx_semaphore.o)
    0x08001148   0x08001148   0x00000038   Code   RO         4868    .text.osSemaphoreNew  RTX_CM0.lib(rtx_semaphore.o)
    0x08001180   0x08001180   0x00000064   Code   RO         4874    .text.osSemaphoreRelease  RTX_CM0.lib(rtx_semaphore.o)
    0x080011e4   0x080011e4   0x0000000c   Code   RO         4666    .text.osThreadExit  RTX_CM0.lib(rtx_thread.o)
    0x080011f0   0x080011f0   0x00000038   Code   RO         4708    .text.osThreadNew   RTX_CM0.lib(rtx_thread.o)
    0x08001228   0x08001228   0x00000012   Code   RO         4759    .text.svcRtxDelay   RTX_CM0.lib(rtx_delay.o)
    0x0800123a   0x0800123a   0x00000002   PAD
    0x0800123c   0x0800123c   0x000001b4   Code   RO         4562    .text.svcRtxKernelInitialize  RTX_CM0.lib(rtx_kernel.o)
    0x080013f0   0x080013f0   0x00000090   Code   RO         4568    .text.svcRtxKernelStart  RTX_CM0.lib(rtx_kernel.o)
    0x08001480   0x08001480   0x000001c0   Code   RO         4954    .text.svcRtxMessageQueueGet  RTX_CM0.lib(rtx_msgqueue.o)
    0x08001640   0x08001640   0x000001c8   Code   RO         4948    .text.svcRtxMessageQueueNew  RTX_CM0.lib(rtx_msgqueue.o)
    0x08001808   0x08001808   0x00000134   Code   RO         4952    .text.svcRtxMessageQueuePut  RTX_CM0.lib(rtx_msgqueue.o)
    0x0800193c   0x0800193c   0x00000070   Code   RO         4860    .text.svcRtxSemaphoreAcquire  RTX_CM0.lib(rtx_semaphore.o)
    0x080019ac   0x080019ac   0x0000008c   Code   RO         4856    .text.svcRtxSemaphoreNew  RTX_CM0.lib(rtx_semaphore.o)
    0x08001a38   0x08001a38   0x00000058   Code   RO         4862    .text.svcRtxSemaphoreRelease  RTX_CM0.lib(rtx_semaphore.o)
    0x08001a90   0x08001a90   0x00000154   Code   RO         4692    .text.svcRtxThreadExit  RTX_CM0.lib(rtx_thread.o)
    0x08001be4   0x08001be4   0x00000248   Code   RO         4664    .text.svcRtxThreadNew  RTX_CM0.lib(rtx_thread.o)
    0x08001e2c   0x08001e2c   0x00000090   Code   RO         1455    i.GPIO_Init         stm32f0xx_gpio.o
    0x08001ebc   0x08001ebc   0x00000044   Code   RO         1456    i.GPIO_PinAFConfig  stm32f0xx_gpio.o
    0x08001f00   0x08001f00   0x00000070   Code   RO         1871    i.NVIC_Init         stm32f0xx_misc.o
    0x08001f70   0x08001f70   0x00000020   Code   RO         1978    i.RCC_AHBPeriphClockCmd  stm32f0xx_rcc.o
    0x08001f90   0x08001f90   0x00000020   Code   RO         1982    i.RCC_APB2PeriphClockCmd  stm32f0xx_rcc.o
    0x08001fb0   0x08001fb0   0x00000248   Code   RO         1992    i.RCC_GetClocksFreq  stm32f0xx_rcc.o
    0x080021f8   0x080021f8   0x00000080   Code   RO         4526    i.SetSysClock       system_stm32f0xx.o
    0x08002278   0x08002278   0x0000007c   Code   RO         4528    i.SystemInit        system_stm32f0xx.o
    0x080022f4   0x080022f4   0x00000010   Code   RO         3933    i.TIM15_IRQHandler  pmtimer.o
    0x08002304   0x08002304   0x00000006   Code   RO         2854    i.TIM_ClearITPendingBit  stm32f0xx_tim.o
    0x0800230a   0x0800230a   0x00000002   PAD
    0x0800230c   0x0800230c   0x0000001c   Code   RO         2859    i.TIM_Cmd           stm32f0xx_tim.o
    0x08002328   0x08002328   0x00000014   Code   RO         2884    i.TIM_ITConfig      stm32f0xx_tim.o
    0x0800233c   0x0800233c   0x0000007c   Code   RO         2932    i.TIM_TimeBaseInit  stm32f0xx_tim.o
    0x080023b8   0x080023b8   0x0000004c   Code   RO         3868    i.USART1_IRQHandler  pmserial.o
    0x08002404   0x08002404   0x00000004   Code   RO         3414    i.USART_ClearFlag   stm32f0xx_usart.o
    0x08002408   0x08002408   0x00000018   Code   RO         3418    i.USART_Cmd         stm32f0xx_usart.o
    0x08002420   0x08002420   0x0000004e   Code   RO         3427    i.USART_GetITStatus  stm32f0xx_usart.o
    0x0800246e   0x0800246e   0x00000042   Code   RO         3429    i.USART_ITConfig    stm32f0xx_usart.o
    0x080024b0   0x080024b0   0x000000f8   Code   RO         3430    i.USART_Init        stm32f0xx_usart.o
    0x080025a8   0x080025a8   0x0000001c   Code   RO         4103    i.__ARM_common_switch8  mbm.o
    0x080025c4   0x080025c4   0x0000000e   Code   RO         5080    i.__scatterload_copy  mc_p.l(handlers.o)
    0x080025d2   0x080025d2   0x00000002   Code   RO         5081    i.__scatterload_null  mc_p.l(handlers.o)
    0x080025d4   0x080025d4   0x0000000e   Code   RO         5082    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x080025e2   0x080025e2   0x00000002   PAD
    0x080025e4   0x080025e4   0x00000020   Code   RO            3    i.main              th_main.o
    0x08002604   0x08002604   0x00000038   Code   RO         4123    i.mbm_CRC16Calc     mbmcrc16.o
    0x0800263c   0x0800263c   0x000000cc   Code   RO         4179    i.mbm_Coils_Calllback  mbmfunccoils.o
    0x08002708   0x08002708   0x000000aa   Code   RO         4180    i.mbm_Coils_MultiWrite_Func  mbmfunccoils.o
    0x080027b2   0x080027b2   0x000000b0   Code   RO         4181    i.mbm_Coils_Read_Func  mbmfunccoils.o
    0x08002862   0x08002862   0x0000008c   Code   RO         4182    i.mbm_Coils_SingleWrite_Func  mbmfunccoils.o
    0x080028ee   0x080028ee   0x000000bc   Code   RO         4290    i.mbm_DiscreteInput_Read_Calllback  mbmfuncdisc.o
    0x080029aa   0x080029aa   0x000000ac   Code   RO         4291    i.mbm_DiscreteInput_Read_Func  mbmfuncdisc.o
    0x08002a56   0x08002a56   0x00000002   PAD
    0x08002a58   0x08002a58   0x0000005c   Code   RO         3978    i.mbm_FunctionExecute  mbm.o
    0x08002ab4   0x08002ab4   0x00000008   Code   RO         3979    i.mbm_GetTxPDUBuffer  mbm.o
    0x08002abc   0x08002abc   0x0000008c   Code   RO         4230    i.mbm_HoldingReg_Calllback  mbmfuncholding.o
    0x08002b48   0x08002b48   0x000000be   Code   RO         4231    i.mbm_HoldingReg_MultiReadWrite_Func  mbmfuncholding.o
    0x08002c06   0x08002c06   0x00000084   Code   RO         4232    i.mbm_HoldingReg_MultiWrite_Func  mbmfuncholding.o
    0x08002c8a   0x08002c8a   0x00000088   Code   RO         4233    i.mbm_HoldingReg_Read_Func  mbmfuncholding.o
    0x08002d12   0x08002d12   0x00000052   Code   RO         4234    i.mbm_HoldingReg_SingleWrite_Func  mbmfuncholding.o
    0x08002d64   0x08002d64   0x00000054   Code   RO         4155    i.mbm_InputReg_Read_Calllback  mbmfuncinput.o
    0x08002db8   0x08002db8   0x00000084   Code   RO         4156    i.mbm_InputReg_Read_Func  mbmfuncinput.o
    0x08002e3c   0x08002e3c   0x0000006c   Code   RO         3981    i.mbm_RTUFrameProcess  mbm.o
    0x08002ea8   0x08002ea8   0x000000a0   Code   RO         3982    i.mbm_RTURxProcess  mbm.o
    0x08002f48   0x08002f48   0x000000a2   Code   RO         3983    i.mbm_RTUSendStartup  mbm.o
    0x08002fea   0x08002fea   0x0000007c   Code   RO         3984    i.mbm_RTUTimerExpired  mbm.o
    0x08003066   0x08003066   0x00000078   Code   RO         3985    i.mbm_RTUTxProcess  mbm.o
    0x080030de   0x080030de   0x00000008   Code   RO         3986    i.mbm_SetTxPDULength  mbm.o
    0x080030e6   0x080030e6   0x00000002   PAD
    0x080030e8   0x080030e8   0x0000002c   Code   RO          132    i.modbusMaster_Thread  th_modbusmaster.o
    0x08003114   0x08003114   0x0000001c   Code   RO          133    i.modbusMaster_ThreadStart  th_modbusmaster.o
    0x08003130   0x08003130   0x00000020   Code   RO         4493    i.osRtxErrorNotify  rtx_config.o
    0x08003150   0x08003150   0x00000004   Code   RO         4494    i.osRtxIdleThread   rtx_config.o
    0x08003154   0x08003154   0x0000001c   Code   RO         3799    i.pMBM_EventGet     pmevent.o
    0x08003170   0x08003170   0x0000002c   Code   RO         3800    i.pMBM_EventInit    pmevent.o
    0x0800319c   0x0800319c   0x00000018   Code   RO         3801    i.pMBM_EventPost    pmevent.o
    0x080031b4   0x080031b4   0x00000024   Code   RO         3934    i.pMBM_RespondTimerEnable  pmtimer.o
    0x080031d8   0x080031d8   0x00000018   Code   RO         3802    i.pMBM_SemaphoreInit  pmevent.o
    0x080031f0   0x080031f0   0x00000010   Code   RO         3803    i.pMBM_SemaphoreRelease  pmevent.o
    0x08003200   0x08003200   0x00000020   Code   RO         3804    i.pMBM_SemaphoreWait  pmevent.o
    0x08003220   0x08003220   0x00000002   Code   RO         3869    i.pMBM_SerialDisable  pmserial.o
    0x08003222   0x08003222   0x00000002   PAD
    0x08003224   0x08003224   0x00000048   Code   RO         3870    i.pMBM_SerialEnable  pmserial.o
    0x0800326c   0x0800326c   0x000000ac   Code   RO         3871    i.pMBM_SerialInit   pmserial.o
    0x08003318   0x08003318   0x0000000c   Code   RO         3987    i.pMBM_SerialRXNE_ISR  mbm.o
    0x08003324   0x08003324   0x0000000c   Code   RO         3872    i.pMBM_SerialReadByte  pmserial.o
    0x08003330   0x08003330   0x0000000c   Code   RO         3873    i.pMBM_SerialSendByte  pmserial.o
    0x0800333c   0x0800333c   0x0000000c   Code   RO         3988    i.pMBM_SerialTC_ISR  mbm.o
    0x08003348   0x08003348   0x00000020   Code   RO         3935    i.pMBM_T35TimerEnable  pmtimer.o
    0x08003368   0x08003368   0x00000020   Code   RO         3936    i.pMBM_TimerDisable  pmtimer.o
    0x08003388   0x08003388   0x00000070   Code   RO         3937    i.pMBM_TimerInit    pmtimer.o
    0x080033f8   0x080033f8   0x0000000c   Code   RO         3989    i.pMBM_Timer_ISR    mbm.o
    0x08003404   0x08003404   0x0000001c   Code   RO         3805    i.pMBM_UserEventGet  pmevent.o
    0x08003420   0x08003420   0x00000018   Code   RO         3806    i.pMBM_UserEventPost  pmevent.o
    0x08003438   0x08003438   0x0000004c   Code   RO            4    i.th_Main           th_main.o
    0x08003484   0x08003484   0x0000009c   Code   RO         3990    i.uMBM_CoreInit     mbm.o
    0x08003520   0x08003520   0x0000006c   Code   RO         3991    i.uMBM_Disable      mbm.o
    0x0800358c   0x0800358c   0x00000016   Code   RO         3992    i.uMBM_Enable       mbm.o
    0x080035a2   0x080035a2   0x00000024   Code   RO         3993    i.uMBM_GetBuffer_16  mbm.o
    0x080035c6   0x080035c6   0x00000068   Code   RO         4157    i.uMBM_InputReg_Read  mbmfuncinput.o
    0x0800362e   0x0800362e   0x000000d2   Code   RO         3996    i.uMBM_Poll         mbm.o
    0x08003700   0x08003700   0x00000028   Code   RO         3997    i.uMBM_UserEvent2ErrorCode  mbm.o
    0x08003728   0x08003728   0x00000060   Code   RO         4138    i.uMBM_Util_SetBits  mbmutils.o
    0x08003788   0x08003788   0x00000020   Data   RO         3807    .constdata          pmevent.o
    0x080037a8   0x080037a8   0x00000080   Data   RO         3998    .constdata          mbm.o
    0x08003828   0x08003828   0x00000200   Data   RO         4124    .constdata          mbmcrc16.o
    0x08003a28   0x08003a28   0x00000064   Data   RO         4466    .constdata          rtx_lib.o
    0x08003a8c   0x08003a8c   0x00000068   Data   RO         4468    .rodata             rtx_lib.o
    0x08003af4   0x08003af4   0x0000000b   Data   RO         4614    .rodata.str1.4      RTX_CM0.lib(rtx_kernel.o)
    0x08003aff   0x08003aff   0x00000001   PAD
    0x08003b00   0x08003b00   0x00000020   Data   RO         5078    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08003b20, Size: 0x00001a68, Max: 0x00004000, ABSOLUTE, COMPRESSED[0x00000068])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00001040   Data   RW         4461    .bss.os             rtx_lib.o
    0x20001040   COMPRESSED   0x00000034   Data   RW         4462    .bss.os.msgqueue.cb  rtx_lib.o
    0x20001074   COMPRESSED   0x00000050   Data   RW         4463    .bss.os.msgqueue.mem  rtx_lib.o
    0x200010c4   COMPRESSED   0x00000088   Data   RW         4464    .bss.os.thread.cb   rtx_lib.o
    0x2000114c   COMPRESSED   0x00000004   PAD
    0x20001150   COMPRESSED   0x00000190   Data   RW         4465    .bss.os.thread.stack  rtx_lib.o
    0x200012e0   COMPRESSED   0x00000002   Data   RW            6    .data               th_main.o
    0x200012e2   COMPRESSED   0x00000002   PAD
    0x200012e4   COMPRESSED   0x00000004   Data   RW          135    .data               th_modbusmaster.o
    0x200012e8   COMPRESSED   0x00000010   Data   RW         2018    .data               stm32f0xx_rcc.o
    0x200012f8   COMPRESSED   0x0000000c   Data   RW         3808    .data               pmevent.o
    0x20001304   COMPRESSED   0x0000001c   Data   RW         3874    .data               pmserial.o
    0x20001320   COMPRESSED   0x00000018   Data   RW         3938    .data               pmtimer.o
    0x20001338   COMPRESSED   0x00000014   Data   RW         4529    .data               system_stm32f0xx.o
    0x2000134c   COMPRESSED   0x00000004   PAD
    0x20001350   COMPRESSED   0x000000a8   Data   RW         4615    .data.os            RTX_CM0.lib(rtx_kernel.o)
    0x200013f8        -       0x00000014   Zero   RW            5    .bss                th_main.o
    0x2000140c        -       0x0000025c   Zero   RW          134    .bss                th_modbusmaster.o
    0x20001668        -       0x00000400   Zero   RW         4517    STACK               startup_stm32f072.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1418         36        128          0          0      16002   mbm.o
        56         10        512          0          0       1292   mbmcrc16.o
       690          0          0          0          0       5481   mbmfunccoils.o
       360          0          0          0          0       2769   mbmfuncdisc.o
       680          0          0          0          0       6826   mbmfuncholding.o
       320          0          0          0          0       3356   mbmfuncinput.o
        96          0          0          0          0       1264   mbmutils.o
         0          0          0          0          0       7820   pmcontext.o
       220         42         32         12          0       4306   pmevent.o
       346         48          0         28          0       7400   pmserial.o
       228         42          0         24          0       2600   pmtimer.o
        36          8          0          0          0        909   rtx_config.o
         0          0        204       4828          0       8132   rtx_lib.o
        88         38        192          0       1024        616   startup_stm32f072.o
       212          0          0          0          0       1599   stm32f0xx_gpio.o
       112          6          0          0          0        804   stm32f0xx_misc.o
       648         38          0         16          0       2781   stm32f0xx_rcc.o
       178         38          0          0          0       2560   stm32f0xx_tim.o
       420         22          0          0          0       3868   stm32f0xx_usart.o
       252         24          0         20          0       1541   system_stm32f0xx.o
       108         18          0          2         20     221635   th_main.o
        72         26          0          4        604       1193   th_modbusmaster.o

    ----------------------------------------------------------------------
      6548        396       1100       4944       1648     304754   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         8          0          0         10          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       152         10          0          0          0        500   irq_cm0.o
        54          4          0          0          0       2752   rtx_delay.o
       692         40         11        168          0      16970   rtx_kernel.o
       246          0          0          0          0       2071   rtx_memory.o
       184          0          0          0          0      15766   rtx_mempool.o
      2096         44          0          0          0      18819   rtx_msgqueue.o
        70          0          0          0          0       8607   rtx_mutex.o
       674         28          0          0          0      10207   rtx_semaphore.o
       476         68          0          0          0       7480   rtx_system.o
      2330         68          0          0          0      39176   rtx_thread.o
       164          4          0          0          0       8403   rtx_timer.o
        86          0          0          0          0          0   __dczerorl2.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        40          0          0          0          0         72   idiv.o
        36          8          0          0          0         68   init.o
        36          0          0          0          0         60   memcpya.o
        36          0          0          0          0        100   memseta.o
        44          0          0          0          0         72   uidiv.o

    ----------------------------------------------------------------------
      7476        282         12        168          0     131123   Library Totals
        10          0          1          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      7138        266         11        168          0     130751   RTX_CM0.lib
       328         16          0          0          0        372   mc_p.l

    ----------------------------------------------------------------------
      7476        282         12        168          0     131123   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     14024        678       1112       5112       1648     432649   Grand Totals
     14024        678       1112        104       1648     432649   ELF Image Totals (compressed)
     14024        678       1112        104          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                15136 (  14.78kB)
    Total RW  Size (RW Data + ZI Data)              6760 (   6.60kB)
    Total ROM Size (Code + RO Data + RW Data)      15240 (  14.88kB)

==============================================================================

